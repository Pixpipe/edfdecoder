{"version":3,"file":"edfdecoder.umd.js","sources":["../node_modules/codecutils/dist/codecutils.module.js","../src/Edf.js","../src/EdfDecoder.js"],"sourcesContent":["function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar traverse_1 = createCommonjsModule(function (module) {\nvar traverse = module.exports = function (obj) {\n    return new Traverse(obj);\n};\n\nfunction Traverse (obj) {\n    this.value = obj;\n}\n\nTraverse.prototype.get = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            node = undefined;\n            break;\n        }\n        node = node[key];\n    }\n    return node;\n};\n\nTraverse.prototype.has = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            return false;\n        }\n        node = node[key];\n    }\n    return true;\n};\n\nTraverse.prototype.set = function (ps, value) {\n    var node = this.value;\n    for (var i = 0; i < ps.length - 1; i ++) {\n        var key = ps[i];\n        if (!hasOwnProperty.call(node, key)) node[key] = {};\n        node = node[key];\n    }\n    node[ps[i]] = value;\n    return value;\n};\n\nTraverse.prototype.map = function (cb) {\n    return walk(this.value, cb, true);\n};\n\nTraverse.prototype.forEach = function (cb) {\n    this.value = walk(this.value, cb, false);\n    return this.value;\n};\n\nTraverse.prototype.reduce = function (cb, init) {\n    var skip = arguments.length === 1;\n    var acc = skip ? this.value : init;\n    this.forEach(function (x) {\n        if (!this.isRoot || !skip) {\n            acc = cb.call(this, acc, x);\n        }\n    });\n    return acc;\n};\n\nTraverse.prototype.paths = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.path); \n    });\n    return acc;\n};\n\nTraverse.prototype.nodes = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.node);\n    });\n    return acc;\n};\n\nTraverse.prototype.clone = function () {\n    var parents = [], nodes = [];\n    \n    return (function clone (src) {\n        for (var i = 0; i < parents.length; i++) {\n            if (parents[i] === src) {\n                return nodes[i];\n            }\n        }\n        \n        if (typeof src === 'object' && src !== null) {\n            var dst = copy(src);\n            \n            parents.push(src);\n            nodes.push(dst);\n            \n            forEach(objectKeys(src), function (key) {\n                dst[key] = clone(src[key]);\n            });\n            \n            parents.pop();\n            nodes.pop();\n            return dst;\n        }\n        else {\n            return src;\n        }\n    })(this.value);\n};\n\nfunction walk (root, cb, immutable) {\n    var path = [];\n    var parents = [];\n    var alive = true;\n    \n    return (function walker (node_) {\n        var node = immutable ? copy(node_) : node_;\n        var modifiers = {};\n        \n        var keepGoing = true;\n        \n        var state = {\n            node : node,\n            node_ : node_,\n            path : [].concat(path),\n            parent : parents[parents.length - 1],\n            parents : parents,\n            key : path.slice(-1)[0],\n            isRoot : path.length === 0,\n            level : path.length,\n            circular : null,\n            update : function (x, stopHere) {\n                if (!state.isRoot) {\n                    state.parent.node[state.key] = x;\n                }\n                state.node = x;\n                if (stopHere) keepGoing = false;\n            },\n            'delete' : function (stopHere) {\n                delete state.parent.node[state.key];\n                if (stopHere) keepGoing = false;\n            },\n            remove : function (stopHere) {\n                if (isArray(state.parent.node)) {\n                    state.parent.node.splice(state.key, 1);\n                }\n                else {\n                    delete state.parent.node[state.key];\n                }\n                if (stopHere) keepGoing = false;\n            },\n            keys : null,\n            before : function (f) { modifiers.before = f; },\n            after : function (f) { modifiers.after = f; },\n            pre : function (f) { modifiers.pre = f; },\n            post : function (f) { modifiers.post = f; },\n            stop : function () { alive = false; },\n            block : function () { keepGoing = false; }\n        };\n        \n        if (!alive) return state;\n        \n        function updateState() {\n            if (typeof state.node === 'object' && state.node !== null) {\n                if (!state.keys || state.node_ !== state.node) {\n                    state.keys = objectKeys(state.node);\n                }\n                \n                state.isLeaf = state.keys.length == 0;\n                \n                for (var i = 0; i < parents.length; i++) {\n                    if (parents[i].node_ === node_) {\n                        state.circular = parents[i];\n                        break;\n                    }\n                }\n            }\n            else {\n                state.isLeaf = true;\n                state.keys = null;\n            }\n            \n            state.notLeaf = !state.isLeaf;\n            state.notRoot = !state.isRoot;\n        }\n        \n        updateState();\n        \n        // use return values to update if defined\n        var ret = cb.call(state, state.node);\n        if (ret !== undefined && state.update) state.update(ret);\n        \n        if (modifiers.before) modifiers.before.call(state, state.node);\n        \n        if (!keepGoing) return state;\n        \n        if (typeof state.node == 'object'\n        && state.node !== null && !state.circular) {\n            parents.push(state);\n            \n            updateState();\n            \n            forEach(state.keys, function (key, i) {\n                path.push(key);\n                \n                if (modifiers.pre) modifiers.pre.call(state, state.node[key], key);\n                \n                var child = walker(state.node[key]);\n                if (immutable && hasOwnProperty.call(state.node, key)) {\n                    state.node[key] = child.node;\n                }\n                \n                child.isLast = i == state.keys.length - 1;\n                child.isFirst = i == 0;\n                \n                if (modifiers.post) modifiers.post.call(state, child);\n                \n                path.pop();\n            });\n            parents.pop();\n        }\n        \n        if (modifiers.after) modifiers.after.call(state, state.node);\n        \n        return state;\n    })(root).node;\n}\n\nfunction copy (src) {\n    if (typeof src === 'object' && src !== null) {\n        var dst;\n        \n        if (isArray(src)) {\n            dst = [];\n        }\n        else if (isDate(src)) {\n            dst = new Date(src.getTime ? src.getTime() : src);\n        }\n        else if (isRegExp(src)) {\n            dst = new RegExp(src);\n        }\n        else if (isError(src)) {\n            dst = { message: src.message };\n        }\n        else if (isBoolean(src)) {\n            dst = new Boolean(src);\n        }\n        else if (isNumber(src)) {\n            dst = new Number(src);\n        }\n        else if (isString(src)) {\n            dst = new String(src);\n        }\n        else if (Object.create && Object.getPrototypeOf) {\n            dst = Object.create(Object.getPrototypeOf(src));\n        }\n        else if (src.constructor === Object) {\n            dst = {};\n        }\n        else {\n            var proto =\n                (src.constructor && src.constructor.prototype)\n                || src.__proto__\n                || {};\n            var T = function () {};\n            T.prototype = proto;\n            dst = new T;\n        }\n        \n        forEach(objectKeys(src), function (key) {\n            dst[key] = src[key];\n        });\n        return dst;\n    }\n    else return src;\n}\n\nvar objectKeys = Object.keys || function keys (obj) {\n    var res = [];\n    for (var key in obj) res.push(key);\n    return res;\n};\n\nfunction toS (obj) { return Object.prototype.toString.call(obj) }\nfunction isDate (obj) { return toS(obj) === '[object Date]' }\nfunction isRegExp (obj) { return toS(obj) === '[object RegExp]' }\nfunction isError (obj) { return toS(obj) === '[object Error]' }\nfunction isBoolean (obj) { return toS(obj) === '[object Boolean]' }\nfunction isNumber (obj) { return toS(obj) === '[object Number]' }\nfunction isString (obj) { return toS(obj) === '[object String]' }\n\nvar isArray = Array.isArray || function isArray (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nforEach(objectKeys(Traverse.prototype), function (key) {\n    traverse[key] = function (obj) {\n        var args = [].slice.call(arguments, 1);\n        var t = new Traverse(obj);\n        return t[key].apply(t, args);\n    };\n});\n\nvar hasOwnProperty = Object.hasOwnProperty || function (obj, key) {\n    return key in obj;\n};\n});\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/**\n* The CodecUtils class gather some static methods that can be useful while\n* encodeing/decoding data.\n* CodecUtils does not have a constructor, don't try to instanciate it.\n*/\n\nvar CodecUtils = function () {\n  function CodecUtils() {\n    classCallCheck(this, CodecUtils);\n  }\n\n  createClass(CodecUtils, null, [{\n    key: \"isPlatformLittleEndian\",\n\n\n    /**\n    * Get whether or not the platform is using little endian.\n    * @return {Boolen } true if the platform is little endian, false if big endian\n    */\n    value: function isPlatformLittleEndian() {\n      var a = new Uint32Array([0x12345678]);\n      var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n      return b[0] != 0x12;\n    }\n\n    /**\n    * convert an ArrayBuffer into a unicode string (2 bytes for each char)\n    * Note: this method was kindly borrowed from Google Closure Compiler:\n    * https://github.com/google/closure-library/blob/master/closure/goog/crypt/crypt.js\n    * @param {ArrayBuffer} buf - input ArrayBuffer\n    * @return {String} a string compatible with Unicode characters\n    */\n\n  }, {\n    key: \"arrayBufferToUnicode\",\n    value: function arrayBufferToUnicode(buff) {\n      var buffUint8 = new Uint8Array(buff);\n      var out = [],\n          pos = 0,\n          c = 0;\n\n      while (pos < buffUint8.length) {\n        var c1 = buffUint8[pos++];\n        if (c1 < 128) {\n          out[c++] = String.fromCharCode(c1);\n        } else if (c1 > 191 && c1 < 224) {\n          var c2 = buffUint8[pos++];\n          out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);\n        } else if (c1 > 239 && c1 < 365) {\n          // Surrogate Pair\n          var c2 = buffUint8[pos++];\n          var c3 = buffUint8[pos++];\n          var c4 = buffUint8[pos++];\n          var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;\n          out[c++] = String.fromCharCode(0xD800 + (u >> 10));\n          out[c++] = String.fromCharCode(0xDC00 + (u & 1023));\n        } else {\n          var c2 = buffUint8[pos++];\n          var c3 = buffUint8[pos++];\n          out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n        }\n      }\n      return out.join('');\n    }\n  }, {\n    key: \"unicodeToArrayBuffer\",\n\n\n    /**\n    * convert a unicode string into an ArrayBuffer\n    * Note that the str is a regular string but it will be encoded with\n    * 2 bytes per char instead of 1 ( ASCII uses 1 byte/char ).\n    * Note: this method was kindly borrowed from Google Closure Compiler:\n    * https://github.com/google/closure-library/blob/master/closure/goog/crypt/crypt.js\n    * @param {String} str - string to encode\n    * @return {ArrayBuffer} the output ArrayBuffer\n    */\n    value: function unicodeToArrayBuffer(str) {\n      var out = [],\n          p = 0;\n      for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n          out[p++] = c;\n        } else if (c < 2048) {\n          out[p++] = c >> 6 | 192;\n          out[p++] = c & 63 | 128;\n        } else if ((c & 0xFC00) == 0xD800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xFC00) == 0xDC00) {\n          // Surrogate Pair\n          c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);\n          out[p++] = c >> 18 | 240;\n          out[p++] = c >> 12 & 63 | 128;\n          out[p++] = c >> 6 & 63 | 128;\n          out[p++] = c & 63 | 128;\n        } else {\n          out[p++] = c >> 12 | 224;\n          out[p++] = c >> 6 & 63 | 128;\n          out[p++] = c & 63 | 128;\n        }\n      }\n\n      // make a buffer out of the array\n      return new Uint8Array(out).buffer;\n    }\n  }, {\n    key: \"arrayBufferToString8\",\n\n\n    /**\n    * Convert an ArrayBuffer into a ASCII string (1 byte for each char)\n    * @param {ArrayBuffer} buf - buffer to convert into ASCII string\n    * @return {String} the output string\n    */\n    value: function arrayBufferToString8(buf) {\n      return String.fromCharCode.apply(null, new Uint8Array(buf));\n    }\n\n    /**\n    * Convert a ASCII string into an ArrayBuffer.\n    * Note that the str is a regular string, it will be encoded with 1 byte per char\n    * @param {String} str - string to encode\n    * @return {ArrayBuffer}\n    */\n\n  }, {\n    key: \"string8ToArrayBuffer\",\n    value: function string8ToArrayBuffer(str) {\n      var buf = new ArrayBuffer(str.length);\n      var bufView = new Uint8Array(buf);\n      for (var i = 0; i < str.length; i++) {\n        bufView[i] = str.charCodeAt(i);\n      }\n      return buf;\n    }\n\n    /**\n    * Write a ASCII string into a buffer\n    * @param {String} str - a string that contains only ASCII characters\n    * @param {ArrayBuffer} buffer - the buffer where to write the string\n    * @param {Number} byteOffset - the offset to apply, in number of bytes\n    */\n\n  }, {\n    key: \"setString8InBuffer\",\n    value: function setString8InBuffer(str, buffer) {\n      var byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      if (byteOffset < 0) {\n        console.warn(\"The byte offset cannot be negative.\");\n        return;\n      }\n\n      if (!buffer || !(buffer instanceof ArrayBuffer)) {\n        console.warn(\"The buffer must be a valid ArrayBuffer.\");\n        return;\n      }\n\n      if (str.length + byteOffset > buffer.byteLength) {\n        console.warn(\"The string is too long to be writen in this buffer.\");\n        return;\n      }\n\n      var bufView = new Uint8Array(buffer);\n\n      for (var i = 0; i < str.length; i++) {\n        bufView[i + byteOffset] = str.charCodeAt(i);\n      }\n    }\n\n    /**\n    * Extract an ASCII string from an ArrayBuffer\n    * @param {ArrayBuffer} buffer - the buffer\n    * @param {Number} strLength - number of chars in the string we want\n    * @param {Number} byteOffset - the offset in number of bytes\n    * @return {String} the string, or null in case of error\n    */\n\n  }, {\n    key: \"getString8FromBuffer\",\n    value: function getString8FromBuffer(buffer, strLength) {\n      var byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      if (byteOffset < 0) {\n        console.warn(\"The byte offset cannot be negative.\");\n        return null;\n      }\n\n      if (!buffer || !(buffer instanceof ArrayBuffer)) {\n        console.warn(\"The buffer must be a valid ArrayBuffer.\");\n        return null;\n      }\n\n      if (strLength + byteOffset > buffer.byteLength) {\n        console.warn(\"The string is too long to be writen in this buffer.\");\n        return null;\n      }\n\n      return String.fromCharCode.apply(null, new Uint8Array(buffer, byteOffset, strLength));\n    }\n\n    /**\n    * Serializes a JS object into an ArrayBuffer.\n    * This is using a unicode JSON intermediate step.\n    * @param {Object} obj - an object that does not have cyclic structure\n    * @return {ArrayBuffer} the serialized output\n    */\n\n  }, {\n    key: \"objectToArrayBuffer\",\n    value: function objectToArrayBuffer(obj) {\n      var buff = null;\n      var objCleanClone = CodecUtils.makeSerializeFriendly(obj);\n\n      try {\n        var strObj = JSON.stringify(objCleanClone);\n        buff = CodecUtils.unicodeToArrayBuffer(strObj);\n      } catch (e) {\n        console.warn(e);\n      }\n\n      return buff;\n    }\n\n    /**\n    * Convert an ArrayBuffer into a JS Object. This uses an intermediate unicode JSON string.\n    * Of course, this buffer has to come from a serialized object.\n    * @param {ArrayBuffer} buff - the ArrayBuffer that hides some object\n    * @return {Object} the deserialized object\n    */\n\n  }, {\n    key: \"ArrayBufferToObject\",\n    value: function ArrayBufferToObject(buff) {\n      var obj = null;\n\n      try {\n        var strObj = CodecUtils.arrayBufferToUnicode(buff);\n        obj = JSON.parse(strObj);\n      } catch (e) {\n        console.warn(e);\n      }\n\n      return obj;\n    }\n\n    /**\n    * Get if wether of not the arg is a typed array\n    * @param {Object} obj - possibly a typed array, or maybe not\n    * @return {Boolean} true if obj is a typed array\n    */\n\n  }, {\n    key: \"isTypedArray\",\n    value: function isTypedArray(obj) {\n      return obj instanceof Int8Array || obj instanceof Uint8Array || obj instanceof Uint8ClampedArray || obj instanceof Int16Array || obj instanceof Uint16Array || obj instanceof Int32Array || obj instanceof Uint32Array || obj instanceof Float32Array || obj instanceof Float64Array;\n    }\n\n    /**\n    * Merge some ArrayBuffes in a single one\n    * @param {Array} arrayOfBuffers - some ArrayBuffers\n    * @return {ArrayBuffer} the larger merged buffer\n    */\n\n  }, {\n    key: \"mergeBuffers\",\n    value: function mergeBuffers(arrayOfBuffers) {\n      var totalByteSize = 0;\n\n      for (var i = 0; i < arrayOfBuffers.length; i++) {\n        totalByteSize += arrayOfBuffers[i].byteLength;\n      }\n\n      var concatArray = new Uint8Array(totalByteSize);\n\n      var offset = 0;\n      for (var i = 0; i < arrayOfBuffers.length; i++) {\n        concatArray.set(new Uint8Array(arrayOfBuffers[i]), offset);\n        offset += arrayOfBuffers[i].byteLength;\n      }\n\n      return concatArray.buffer;\n    }\n\n    /**\n    * In a browser, the global object is `window` while in Node, it's `GLOBAL`.\n    * This method return the one that is relevant to the execution context.\n    * @return {Object} the global object\n    */\n\n  }, {\n    key: \"getGlobalObject\",\n    value: function getGlobalObject() {\n      var constructorHost = null;\n\n      try {\n        constructorHost = window; // in a web browser\n      } catch (e) {\n        try {\n          constructorHost = GLOBAL; // in node\n        } catch (e) {\n          console.warn(\"You are not in a Javascript environment?? Weird.\");\n          return null;\n        }\n      }\n      return constructorHost;\n    }\n\n    /**\n    * Extract a typed array from an arbitrary buffer, with an arbitrary offset\n    * @param {ArrayBuffer} buffer - the buffer from which we extract data\n    * @param {Number} byteOffset - offset from the begining of buffer\n    * @param {Function} arrayType - function object, actually the constructor of the output array\n    * @param {Number} numberOfElements - nb of elem we want to fetch from the buffer\n    * @return {TypedArray} output of type given by arg arrayType - this is a copy, not a view\n    */\n\n  }, {\n    key: \"extractTypedArray\",\n    value: function extractTypedArray(buffer, byteOffset, arrayType, numberOfElements) {\n      if (!buffer) {\n        console.warn(\"Input Buffer is null.\");\n        return null;\n      }\n\n      if (!(buffer instanceof ArrayBuffer)) {\n        console.warn(\"Buffer must be of type ArrayBuffer\");\n        return null;\n      }\n\n      if (numberOfElements <= 0) {\n        console.warn(\"The number of elements to fetch must be greater than 0\");\n        return null;\n      }\n\n      if (byteOffset < 0) {\n        console.warn(\"The byte offset must be possitive or 0\");\n        return null;\n      }\n\n      if (byteOffset >= buffer.byteLength) {\n        console.warn(\"The offset cannot be larger than the size of the buffer.\");\n        return null;\n      }\n\n      if (arrayType instanceof Function && !(\"BYTES_PER_ELEMENT\" in arrayType)) {\n        console.warn(\"ArrayType must be a typed array constructor function.\");\n        return null;\n      }\n\n      if (arrayType.BYTES_PER_ELEMENT * numberOfElements + byteOffset > buffer.byteLength) {\n        console.warn(\"The requested number of elements is too large for this buffer\");\n        return;\n      }\n\n      var slicedBuff = buffer.slice(byteOffset, byteOffset + numberOfElements * arrayType.BYTES_PER_ELEMENT);\n      return new arrayType(slicedBuff);\n    }\n\n    /**\n    * Get some info about the given TypedArray\n    * @param {TypedArray} typedArray - one of the typed array\n    * @return {Object} in form of {type: String, signed: Boolean, bytesPerElements: Number, byteLength: Number, length: Number}\n    */\n\n  }, {\n    key: \"getTypedArrayInfo\",\n    value: function getTypedArrayInfo(typedArray) {\n      var type = null;\n      var signed = false;\n\n      if (typedArray instanceof Int8Array) {\n        type = \"int\";\n        signed = false;\n      } else if (typedArray instanceof Uint8Array) {\n        type = \"int\";\n        signed = true;\n      } else if (typedArray instanceof Uint8ClampedArray) {\n        type = \"int\";\n        signed = true;\n      } else if (typedArray instanceof Int16Array) {\n        type = \"int\";\n        signed = false;\n      } else if (typedArray instanceof Uint16Array) {\n        type = \"int\";\n        signed = true;\n      } else if (typedArray instanceof Int32Array) {\n        type = \"int\";\n        signed = false;\n      } else if (typedArray instanceof Uint32Array) {\n        type = \"int\";\n        signed = true;\n      } else if (typedArray instanceof Float32Array) {\n        type = \"float\";\n        signed = false;\n      } else if (typedArray instanceof Float64Array) {\n        type = \"float\";\n        signed = false;\n      }\n\n      return {\n        type: type,\n        signed: signed,\n        bytesPerElements: typedArray.BYTES_PER_ELEMENT,\n        byteLength: typedArray.byteLength,\n        length: typedArray.length\n      };\n    }\n\n    /**\n    * Counts the number of typed array obj has as attributes\n    * @param {Object} obj - an Object\n    * @return {Number} the number of typed array\n    */\n\n  }, {\n    key: \"howManyTypedArrayAttributes\",\n    value: function howManyTypedArrayAttributes(obj) {\n      var typArrCounter = 0;\n      traverse_1(obj).forEach(function (x) {\n        typArrCounter += CodecUtils.isTypedArray(x);\n      });\n      return typArrCounter;\n    }\n\n    /**\n    * Check if the given object contains any circular reference.\n    * (Circular ref are non serilizable easily, we want to spot them)\n    * @param {Object} obj - An object to check\n    * @return {Boolean} true if obj contains circular refm false if not\n    */\n\n  }, {\n    key: \"hasCircularReference\",\n    value: function hasCircularReference(obj) {\n      var hasCircular = false;\n      traverse_1(obj).forEach(function (x) {\n        if (this.circular) {\n          hasCircular = true;\n        }\n      });\n      return hasCircular;\n    }\n\n    /**\n    * Remove circular dependencies from an object and return a circularRef-free version\n    * of the object (does not change the original obj), of null if no circular ref was found\n    * @param {Object} obj - An object to check\n    * @return {Object} a circular-ref free object copy if any was found, or null if no circ was found\n    */\n\n  }, {\n    key: \"removeCircularReference\",\n    value: function removeCircularReference(obj) {\n      var hasCircular = false;\n      var noCircRefObj = traverse_1(obj).map(function (x) {\n        if (this.circular) {\n          this.remove();\n          hasCircular = true;\n        }\n      });\n      return hasCircular ? noCircRefObj : null;\n    }\n\n    /**\n    * Clone the object and replace the typed array attributes by regular Arrays.\n    * @param {Object} obj - an object to alter\n    * @return {Object} the clone if ant typed array were changed, or null if was obj didnt contain any typed array.\n    */\n\n  }, {\n    key: \"replaceTypedArrayAttributesByArrays\",\n    value: function replaceTypedArrayAttributesByArrays(obj) {\n      var hasTypedArray = false;\n\n      var noTypedArrClone = traverse_1(obj).map(function (x) {\n        if (CodecUtils.isTypedArray(x)) {\n          // here, we cannot call .length directly because traverse.map already serialized\n          // typed arrays into regular objects\n          var origSize = Object.keys(x).length;\n          var untypedArray = new Array(origSize);\n\n          for (var i = 0; i < origSize; i++) {\n            untypedArray[i] = x[i];\n          }\n          this.update(untypedArray);\n          hasTypedArray = true;\n        }\n      });\n      return hasTypedArray ? noTypedArrClone : null;\n    }\n\n    /**\n    * Creates a clone, does not alter the original object.\n    * Remove circular dependencies and replace typed arrays by regular arrays.\n    * Both will make the serialization possible and more reliable.\n    * @param {Object} obj - the object to make serialization friendly\n    * @return {Object} a clean clone, or null if nothing was done\n    */\n\n  }, {\n    key: \"makeSerializeFriendly\",\n    value: function makeSerializeFriendly(obj) {\n      var newObj = obj;\n      var noCircular = CodecUtils.removeCircularReference(newObj);\n\n      if (noCircular) newObj = noCircular;\n\n      var noTypedArr = CodecUtils.replaceTypedArrayAttributesByArrays(newObj);\n\n      if (noTypedArr) newObj = noTypedArr;\n\n      return newObj;\n    }\n  }]);\n  return CodecUtils;\n}(); /* END of class CodecUtils */\n\nexport { CodecUtils };\n"," /*\n* Author    Jonathan Lurie - http://me.jonahanlurie.fr\n* License   MIT\n* Link      https://github.com/jonathanlurie/edfdecoder\n* Lab       MCIN - http://mcin.ca/ - Montreal Neurological Institute\n*/\n\n\n/**\n* An instance of Edf is usually given as output of an EdfDecoder. It provides an\n* interface with a lot of helper function to query information that were extracted\n* from en *.edf* file, such as header information, getting a signal at a given record\n* or concatenating records of a given signal.\n*\n* Keep in mind that the number of records in an edf file can be decoded by arbitrary\n* measures, or it can be 1 second per records, etc.\n*\n*/\nclass Edf {\n  constructor( header, rawSignals, physicalSignals ){\n    this._header = header;\n    this._physicalSignals = physicalSignals;\n    this._rawSignals = rawSignals;\n  }\n\n  /**\n  * Get the duration in second of a single record\n  * @return {Number} duration\n  */\n  getRecordDuration(){\n    return this._header.durationDataRecordsSec;\n  }\n\n\n  /**\n  * Get the ID of the recording\n  * @return {String} the ID\n  */\n  getRecordingID(){\n    return this._header.localRecordingId;\n  }\n\n\n  /**\n  * get the number of records per signal.\n  * Note: most of the time, records from the same signal are contiguous in time.\n  * @return {Number} the number of records\n  */\n  getNumberOfRecords(){\n    return this._header.nbDataRecords;\n  }\n\n\n  /**\n  * get the number of signals.\n  * Note: a signal can have more than one record\n  * @return {Number} the number of signals\n  */\n  getNumberOfSignals(){\n    return this._header.nbSignals;\n  }\n\n\n  /**\n  * Get the patien ID\n  * @return {String} ID\n  */\n  getPatientID(){\n    return this._header.patientId;\n  }\n\n\n  /**\n  * Get the date and the time at which the recording has started\n  * @return {Date} the date\n  */\n  getRecordingStartDate(){\n    return this._header.recordingDate;\n  }\n\n\n  /**\n  * Get the value of the reserved field, global (from header) or specific to a signal.\n  * Notice: reserved are rarely used.\n  * @param {Number} index - if not specified, get the header's reserved field. If [0, nbSignals[ get the reserved field specific for the given signal\n  * @return {String} the data of the reserved field.\n  */\n  getReservedField( index=-1 ){\n    if( index === -1 ){\n      return this._header.reserved;\n    }else{\n      if( index >= 0 && index < this._header.signalInfo.length ){\n        return this._header.signalInfo[index].reserved;\n      }\n    }\n\n    return null;\n  }\n\n\n  /**\n  * Get the digital maximum for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalDigitalMax( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].digitalMaximum;\n  }\n\n\n  /**\n  * Get the digital minimum for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalDigitalMin( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].digitalMinimum;\n  }\n\n\n  /**\n  * Get the physical minimum for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalPhysicalMin( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].physicalMinimum;\n  }\n\n\n  /**\n  * Get the physical maximum for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalPhysicalMax( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].physicalMaximum;\n  }\n\n\n  /**\n  * Get the label for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {String}\n  */\n  getSignalLabel( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].label;\n  }\n\n\n  /**\n  * Get the number of samples per record for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalNumberOfSamplesPerRecord( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].nbOfSamples;\n  }\n\n\n  /**\n  * Get the unit (dimension label) used for a given signal index.\n  * E.g. this can be 'uV' when the signal is an EEG\n  * @param {Number} index - index of the signal\n  * @return {String} the unit name\n  */\n  getSignalPhysicalUnit( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].physicalDimension;\n  }\n\n\n  /**\n  * Get the unit prefiltering info for a given signal index.\n  * @param {Number} index - index of the signal\n  * @return {String} the prefiltering info\n  */\n  getSignalPrefiltering( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].prefiltering;\n  }\n\n\n  /**\n  * Get the transducer type info for a given signal index.\n  * @param {Number} index - index of the signal\n  * @return {String} the transducer type info\n  */\n  getSignalTransducerType( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].transducerType;\n  }\n\n\n  /**\n  * Get the sampling frequency in Hz of a given signal\n  * @param {Number} index - index of the signal\n  * @return {Number} frequency in Hz\n  */\n  getSignalSamplingFrequency( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].nbOfSamples / this._header.durationDataRecordsSec;\n  }\n\n  /**\n  * Get the physical (scaled) signal at a given index and record\n  * @param {Number} index - index of the signal\n  * @param {Number} record - index of the record\n  * @return {Float32Array} the physical signal in Float32\n  */\n  getPhysicalSignal( index, record ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    if( record<0 && record>=this._physicalSignals[index].length ){\n      console.warn(\"Record index is out of range\");\n      return null;\n    }\n\n    return this._physicalSignals[index][record];\n  }\n\n\n  /**\n  * Get the raw (digital) signal at a given index and record\n  * @param {Number} index - index of the signal\n  * @param {Number} record - index of the record\n  * @return {Int16Array} the physical signal in Int16\n  */\n  getRawSignal( index, record ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    if( record<0 && record>=this._rawSignals[index].length ){\n      console.warn(\"Record index is out of range\");\n      return null;\n    }\n\n    return this._rawSignals[index][record];\n  }\n\n\n\n  /**\n  * Get concatenated contiguous records of a given signal, the index of the\n  * first record and the number of records to concat.\n  * Notice: this allocates a new buffer of an extented size.\n  * @param {Number} index - index of the signal\n  * @param {Number} recordStart - index of the record to start with\n  * @param {Number} howMany - Number of records to concatenate\n  * @return {Float32Array} the physical signal in Float32\n  */\n  getPhysicalSignalConcatRecords(index, recordStart=-1, howMany=-1){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    if( recordStart<0 && recordStart>=this._physicalSignals[index].length ){\n      console.warn(\"The index recordStart is out of range\");\n      return null;\n    }\n\n    if(recordStart === -1){\n      recordStart = 0;\n    }\n\n    if(howMany === -1){\n      howMany = this._physicalSignals[index].length - recordStart;\n    }else{\n      // we still want to check if what the user put is not out of bound\n      if( recordStart + howMany > this._physicalSignals[index].length ){\n        console.warn(\"The number of requested records is too large. Forcing only to available records.\");\n        howMany = this._physicalSignals[index].length - recordStart; \n      }\n\n    }\n\n    // index of the last one to consider\n    var recordEnd = recordStart + howMany - 1;\n\n    if( recordEnd<0 && recordEnd>=this._physicalSignals[index].length ){\n      console.warn(\"Too many records to concatenate, this goes out of range.\");\n      return null;\n    }\n\n    var totalSize = 0;\n    for(var i=recordStart; i<recordStart + howMany; i++){\n      totalSize += this._physicalSignals[index][i].length;\n    }\n\n    var concatSignal = new Float32Array( totalSize );\n    var offset = 0;\n\n    for(var i=recordStart; i<recordStart + howMany; i++){\n      concatSignal.set( this._physicalSignals[index][i], offset );\n      offset += this._physicalSignals[index][i].length;\n    }\n\n    return concatSignal;\n  }\n\n\n} /* END of class Edf */\n\nexport { Edf };\n","/*\n* Author    Jonathan Lurie - http://me.jonahanlurie.fr\n* License   MIT\n* Link      https://github.com/jonathanlurie/edfdecoder\n* Lab       MCIN - http://mcin.ca/ - Montreal Neurological Institute\n*/\n\n\nimport { CodecUtils } from 'codecutils';\nimport { Edf } from './Edf.js';\n\n\n/**\n* An instance of EdfDecoder is used to decode an EDF file, or rather a buffer extracted from a\n* EDF file. To specify the input, use the method `.setInput(buf)` , then launch the decoding\n* with the method `.decode()` and finally get the content as an object with `.getOutput()`.\n* If the output is `null`, then the parser was not able to decode the file.\n*/\nclass EdfDecoder {\n\n  /**\n   * Create a EdfDecoder.\n   */\n  constructor( ) {\n    this._inputBuffer = null;\n    this._output = null;\n  }\n\n\n  /**\n  * Set the buffer (most likey from a file) that contains some EDF data\n  * @param {ArrayBuffer} buff - buffer from a file\n  */\n  setInput( buff ){\n    this._output = null;\n    this._inputBuffer = buff;\n  }\n\n\n  /**\n  * Decode the EDF file buffer set as input. This is done in two steps, first the header and then the data.\n  */\n  decode(){\n    try{\n      var headerInfo = this._decodeHeader();\n      this._decodeData( headerInfo.offset, headerInfo.header );\n    }catch(e){\n      console.warn( e );\n    }\n\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Decodes the header or the file\n  */\n  _decodeHeader(){\n    if(! this._inputBuffer ){\n      console.warn(\"A input buffer must be specified.\");\n      return;\n    }\n\n    var header = {};\n    var offset = 0;\n\n    // 8 ascii : version of this data format (0)\n    header.dataFormat = CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim();\n    offset += 8;\n\n    // 80 ascii : local patient identification\n    header.patientId = CodecUtils.getString8FromBuffer( this._inputBuffer , 80, offset).trim();\n    offset += 80;\n\n    // 80 ascii : local recording identification\n    header.localRecordingId = CodecUtils.getString8FromBuffer( this._inputBuffer , 80, offset).trim();\n    offset += 80;\n\n    // 8 ascii : startdate of recording (dd.mm.yy)\n    var recordingStartDate = CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim();\n    offset += 8;\n\n    // 8 ascii : starttime of recording (hh.mm.ss)\n    var recordingStartTime = CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim();\n    offset += 8;\n\n    var date = recordingStartDate.split(\".\");\n    var time = recordingStartTime.split(\".\");\n    header.recordingDate = new Date( date[2], date[1], date[0], time[0], time[1], time[2], 0 );\n\n    // 8 ascii : number of bytes in header record\n    header.nbBytesHeaderRecord = parseInt( CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim() );\n    offset += 8;\n\n    // 44 ascii : reserved\n    header.reserved = CodecUtils.getString8FromBuffer( this._inputBuffer , 44, offset);\n    offset += 44;\n\n    // 8 ascii : number of data records (-1 if unknown)\n    header.nbDataRecords = parseInt( CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim() );\n    offset += 8;\n\n    // 8 ascii : duration of a data record, in seconds\n    header.durationDataRecordsSec = parseInt( CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim() );\n    offset += 8;\n\n    // 4 ascii : number of signals (ns) in data record\n    header.nbSignals = parseInt( CodecUtils.getString8FromBuffer( this._inputBuffer , 4, offset).trim() );\n    offset += 4;\n\n    // the following fields occurs ns time in a row each\n    var that = this;\n    function getAllSections( sizeOfEachThing ){\n      var allThings = [];\n      for(var i=0; i<header.nbSignals; i++){\n        allThings.push( CodecUtils.getString8FromBuffer( that._inputBuffer , sizeOfEachThing, offset ).trim() );\n        offset += sizeOfEachThing;\n      }\n      return allThings;\n    }\n\n    var signalInfoArrays = {\n      // ns * 16 ascii : ns * label (e.g. EEG Fpz-Cz or Body temp)\n      label: getAllSections( 16 ),\n      // ns * 80 ascii : ns * transducer type (e.g. AgAgCl electrode)\n      transducerType: getAllSections( 80 ),\n      // ns * 8 ascii : ns * physical dimension (e.g. uV or degreeC)\n      physicalDimension: getAllSections( 8 ),\n      // ns * 8 ascii : ns * physical minimum (e.g. -500 or 34)\n      physicalMinimum: getAllSections( 8 ),\n      // ns * 8 ascii : ns * physical maximum (e.g. 500 or 40)\n      physicalMaximum: getAllSections( 8 ),\n      // ns * 8 ascii : ns * digital minimum (e.g. -2048)\n      digitalMinimum: getAllSections( 8 ),\n      // ns * 8 ascii : ns * digital maximum (e.g. 2047)\n      digitalMaximum: getAllSections( 8 ),\n      // ns * 80 ascii : ns * prefiltering (e.g. HP:0.1Hz LP:75Hz)\n      prefiltering: getAllSections( 80 ),\n      // ns * 8 ascii : ns * nr of samples in each data record\n      nbOfSamples: getAllSections( 8 ),\n      // ns * 32 ascii : ns * reserved\n      reserved: getAllSections( 32 )\n    }\n\n    var signalInfo = [];\n    header.signalInfo = signalInfo;\n    for(var i=0; i<header.nbSignals; i++){\n      signalInfo.push({\n        label: signalInfoArrays.label[i],\n        transducerType: signalInfoArrays.transducerType[i],\n        physicalDimension: signalInfoArrays.physicalDimension[i],\n        physicalMinimum: parseFloat( signalInfoArrays.physicalMinimum[i] ),\n        physicalMaximum: parseFloat( signalInfoArrays.physicalMaximum[i] ),\n        digitalMinimum: parseInt( signalInfoArrays.digitalMinimum[i] ),\n        digitalMaximum: parseInt( signalInfoArrays.digitalMaximum[i] ),\n        prefiltering: signalInfoArrays.prefiltering[i],\n        nbOfSamples: parseInt( signalInfoArrays.nbOfSamples[i] ),\n        reserved: signalInfoArrays.reserved[i],\n      })\n    }\n\n    return {\n      offset: offset,\n      header: header\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Decodes the data. Must be called after the header is decoded.\n  * @param {Number} byteOffset - byte size of the header\n  */\n  _decodeData( byteOffset, header ){\n    if(! this._inputBuffer ){\n      console.warn(\"A input buffer must be specified.\");\n      return;\n    }\n\n    if(! header ){\n      console.warn(\"Invalid header\");\n      return;\n    }\n\n    var sampleType = Int16Array;\n\n    // the raw signal is the digital signal\n    var rawSignals = new Array(header.nbSignals);\n    var physicalSignals = new Array(header.nbSignals);\n    // allocation some room for all the records\n    for(var ns=0; ns<header.nbSignals; ns++){\n      rawSignals[ns] = new Array(header.nbDataRecords);\n      physicalSignals[ns] = new Array(header.nbDataRecords);\n    }\n\n    // the signal are faster varying than the records\n    for(var r=0; r<header.nbDataRecords; r++){\n      for(var ns=0; ns<header.nbSignals; ns++){\n        var signalNbSamples = header.signalInfo[ns].nbOfSamples;\n        var rawSignal = CodecUtils.extractTypedArray( this._inputBuffer, byteOffset, sampleType, signalNbSamples );\n        byteOffset += signalNbSamples * sampleType.BYTES_PER_ELEMENT;\n        rawSignals[ns][r] = rawSignal;\n\n\n        // compute the scaled signal\n        var physicalSignal = new Float32Array( rawSignal.length ).fill(0);\n        var digitalSignalRange = header.signalInfo[ns].digitalMaximum - header.signalInfo[ns].digitalMinimum;\n        var physicalSignalRange = header.signalInfo[ns].physicalMaximum - header.signalInfo[ns].physicalMinimum;\n\n\n        for(var index=0; index<signalNbSamples; index++){\n          physicalSignal[ index ] = (((rawSignal[index] - header.signalInfo[ns].digitalMinimum) / digitalSignalRange ) * physicalSignalRange) + header.signalInfo[ns].physicalMinimum;\n        }\n\n        //physicalSignals.push( physicalSignal );\n        physicalSignals[ns][r] = physicalSignal;\n\n      }\n    }\n\n    this._output = new Edf( header, rawSignals, physicalSignals );\n\n\n  } /* END method */\n\n\n\n  /**\n  * Get the output as an object. The output contains the the header (Object),\n  * the raw (digital) signal as a Int16Array and the physical (scaled) signal\n  * as a Float32Array.\n  * @return {Object} the output.\n  */\n  getOutput(){\n    return this._output;\n  }\n\n}\n\nexport { EdfDecoder };\n"],"names":["Edf","header","rawSignals","physicalSignals","_header","_physicalSignals","_rawSignals","durationDataRecordsSec","localRecordingId","nbDataRecords","nbSignals","patientId","recordingDate","index","reserved","signalInfo","length","warn","digitalMaximum","digitalMinimum","physicalMinimum","physicalMaximum","label","nbOfSamples","physicalDimension","prefiltering","transducerType","record","recordStart","howMany","recordEnd","totalSize","i","concatSignal","Float32Array","offset","set","EdfDecoder","_inputBuffer","_output","buff","headerInfo","_decodeHeader","_decodeData","e","dataFormat","CodecUtils","getString8FromBuffer","trim","recordingStartDate","recordingStartTime","date","split","time","Date","nbBytesHeaderRecord","parseInt","that","getAllSections","sizeOfEachThing","allThings","push","signalInfoArrays","parseFloat","byteOffset","sampleType","Int16Array","Array","ns","r","signalNbSamples","rawSignal","extractTypedArray","BYTES_PER_ELEMENT","physicalSignal","fill","digitalSignalRange","physicalSignalRange"],"mappings":";;;;;;AAAA,SAAS,oBAAoB,CAAC,EAAE,EAAE,MAAM,EAAE;CACzC,OAAO,MAAM,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC;CAC5E;;AAED,IAAI,UAAU,GAAG,oBAAoB,CAAC,UAAU,MAAM,EAAE;AACxD,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE;IAC3C,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;CAC5B,CAAC;;AAEF,SAAS,QAAQ,EAAE,GAAG,EAAE;IACpB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;CACpB;;AAED,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,EAAE,EAAE;IACnC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QACjC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;YAC1C,IAAI,GAAG,SAAS,CAAC;YACjB,MAAM;SACT;QACD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,OAAO,IAAI,CAAC;CACf,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,EAAE,EAAE;IACnC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QACjC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;YAC1C,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,OAAO,IAAI,CAAC;CACf,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,EAAE,EAAE,KAAK,EAAE;IAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE;QACrC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACpD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACpB,OAAO,KAAK,CAAC;CAChB,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,EAAE,EAAE;IACnC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;CACrC,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,EAAE,EAAE;IACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IACzC,OAAO,IAAI,CAAC,KAAK,CAAC;CACrB,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,EAAE,EAAE,IAAI,EAAE;IAC5C,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC;IAClC,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACnC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QACtB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE;YACvB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;SAC/B;KACJ,CAAC,CAAC;IACH,OAAO,GAAG,CAAC;CACd,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;IACnC,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QACtB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvB,CAAC,CAAC;IACH,OAAO,GAAG,CAAC;CACd,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;IACnC,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QACtB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvB,CAAC,CAAC;IACH,OAAO,GAAG,CAAC;CACd,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;IACnC,IAAI,OAAO,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC;;IAE7B,OAAO,CAAC,SAAS,KAAK,EAAE,GAAG,EAAE;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBACpB,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;aACnB;SACJ;;QAED,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;YACzC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;;YAEpB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;YAEhB,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,UAAU,GAAG,EAAE;gBACpC,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAC9B,CAAC,CAAC;;YAEH,OAAO,CAAC,GAAG,EAAE,CAAC;YACd,KAAK,CAAC,GAAG,EAAE,CAAC;YACZ,OAAO,GAAG,CAAC;SACd;aACI;YACD,OAAO,GAAG,CAAC;SACd;KACJ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;CAClB,CAAC;;AAEF,SAAS,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE;IAChC,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,KAAK,GAAG,IAAI,CAAC;;IAEjB,OAAO,CAAC,SAAS,MAAM,EAAE,KAAK,EAAE;QAC5B,IAAI,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QAC3C,IAAI,SAAS,GAAG,EAAE,CAAC;;QAEnB,IAAI,SAAS,GAAG,IAAI,CAAC;;QAErB,IAAI,KAAK,GAAG;YACR,IAAI,GAAG,IAAI;YACX,KAAK,GAAG,KAAK;YACb,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;YACtB,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;YACpC,OAAO,GAAG,OAAO;YACjB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC;YAC1B,KAAK,GAAG,IAAI,CAAC,MAAM;YACnB,QAAQ,GAAG,IAAI;YACf,MAAM,GAAG,UAAU,CAAC,EAAE,QAAQ,EAAE;gBAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACf,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACpC;gBACD,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;gBACf,IAAI,QAAQ,EAAE,SAAS,GAAG,KAAK,CAAC;aACnC;YACD,QAAQ,GAAG,UAAU,QAAQ,EAAE;gBAC3B,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpC,IAAI,QAAQ,EAAE,SAAS,GAAG,KAAK,CAAC;aACnC;YACD,MAAM,GAAG,UAAU,QAAQ,EAAE;gBACzB,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;oBAC5B,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iBAC1C;qBACI;oBACD,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACvC;gBACD,IAAI,QAAQ,EAAE,SAAS,GAAG,KAAK,CAAC;aACnC;YACD,IAAI,GAAG,IAAI;YACX,MAAM,GAAG,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YAC/C,KAAK,GAAG,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;YAC7C,GAAG,GAAG,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;YACzC,IAAI,GAAG,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE;YAC3C,IAAI,GAAG,YAAY,EAAE,KAAK,GAAG,KAAK,CAAC,EAAE;YACrC,KAAK,GAAG,YAAY,EAAE,SAAS,GAAG,KAAK,CAAC,EAAE;SAC7C,CAAC;;QAEF,IAAI,CAAC,KAAK,EAAE,OAAO,KAAK,CAAC;;QAEzB,SAAS,WAAW,GAAG;YACnB,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;gBACvD,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,EAAE;oBAC3C,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBACvC;;gBAED,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;;gBAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,EAAE;wBAC5B,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;wBAC5B,MAAM;qBACT;iBACJ;aACJ;iBACI;gBACD,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gBACpB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;aACrB;;YAED,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;YAC9B,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;SACjC;;QAED,WAAW,EAAE,CAAC;;;QAGd,IAAI,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,GAAG,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;QAEzD,IAAI,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;;QAE/D,IAAI,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC;;QAE7B,IAAI,OAAO,KAAK,CAAC,IAAI,IAAI,QAAQ;WAC9B,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;YAEpB,WAAW,EAAE,CAAC;;YAEd,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,CAAC,EAAE;gBAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;gBAEf,IAAI,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;;gBAEnE,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACpC,IAAI,SAAS,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;oBACnD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;iBAChC;;gBAED,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC1C,KAAK,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;;gBAEvB,IAAI,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;gBAEtD,IAAI,CAAC,GAAG,EAAE,CAAC;aACd,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,EAAE,CAAC;SACjB;;QAED,IAAI,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;;QAE7D,OAAO,KAAK,CAAC;KAChB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;CACjB;;AAED,SAAS,IAAI,EAAE,GAAG,EAAE;IAChB,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;QACzC,IAAI,GAAG,CAAC;;QAER,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;YACd,GAAG,GAAG,EAAE,CAAC;SACZ;aACI,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE;YAClB,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC;SACrD;aACI,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;YACpB,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;aACI,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;YACnB,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC;SAClC;aACI,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;YACrB,GAAG,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;SAC1B;aACI,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;YACpB,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;aACI,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;YACpB,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;aACI,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE;YAC7C,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;SACnD;aACI,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,EAAE;YACjC,GAAG,GAAG,EAAE,CAAC;SACZ;aACI;YACD,IAAI,KAAK;gBACL,CAAC,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,WAAW,CAAC,SAAS;mBAC1C,GAAG,CAAC,SAAS;mBACb,EAAE,CAAC;YACV,IAAI,CAAC,GAAG,YAAY,EAAE,CAAC;YACvB,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;YACpB,GAAG,GAAG,IAAI,CAAC,CAAC;SACf;;QAED,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,UAAU,GAAG,EAAE;YACpC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;SACvB,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;KACd;SACI,OAAO,GAAG,CAAC;CACnB;;AAED,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,IAAI,SAAS,IAAI,EAAE,GAAG,EAAE;IAChD,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,OAAO,GAAG,CAAC;CACd,CAAC;;AAEF,SAAS,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACjE,SAAS,MAAM,EAAE,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,eAAe,EAAE;AAC7D,SAAS,QAAQ,EAAE,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,iBAAiB,EAAE;AACjE,SAAS,OAAO,EAAE,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,gBAAgB,EAAE;AAC/D,SAAS,SAAS,EAAE,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,kBAAkB,EAAE;AACnE,SAAS,QAAQ,EAAE,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,iBAAiB,EAAE;AACjE,SAAS,QAAQ,EAAE,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,iBAAiB,EAAE;;AAEjE,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,SAAS,OAAO,EAAE,EAAE,EAAE;IACjD,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,gBAAgB,CAAC;CAClE,CAAC;;AAEF,IAAI,OAAO,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;IAC5B,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;SAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;KACpB;CACJ,CAAC;;AAEF,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,UAAU,GAAG,EAAE;IACnD,QAAQ,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,EAAE;QAC3B,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;KAChC,CAAC;CACL,CAAC,CAAC;;AAEH,IAAI,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,UAAU,GAAG,EAAE,GAAG,EAAE;IAC9D,OAAO,GAAG,IAAI,GAAG,CAAC;CACrB,CAAC;CACD,CAAC,CAAC;;AAEH,IAAI,cAAc,GAAG,YAAY;EAC/B,SAAS,UAAU,CAAC,KAAK,EAAE;IACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;GACpB;;EAED,SAAS,cAAc,CAAC,GAAG,EAAE;IAC3B,IAAI,KAAK,EAAE,IAAI,CAAC;;IAEhB,SAAS,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;MACtB,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;QAC5C,IAAI,OAAO,GAAG;UACZ,GAAG,EAAE,GAAG;UACR,GAAG,EAAE,GAAG;UACR,OAAO,EAAE,OAAO;UAChB,MAAM,EAAE,MAAM;UACd,IAAI,EAAE,IAAI;SACX,CAAC;;QAEF,IAAI,IAAI,EAAE;UACR,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;SAC5B,MAAM;UACL,KAAK,GAAG,IAAI,GAAG,OAAO,CAAC;UACvB,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SAClB;OACF,CAAC,CAAC;KACJ;;IAED,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;MACxB,IAAI;QACF,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;;QAEzB,IAAI,KAAK,YAAY,UAAU,EAAE;UAC/B,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;YAC/C,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;WACrB,EAAE,UAAU,GAAG,EAAE;YAChB,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;WACtB,CAAC,CAAC;SACJ,MAAM;UACL,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,GAAG,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;SACzD;OACF,CAAC,OAAO,GAAG,EAAE;QACZ,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;OACtB;KACF;;IAED,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE;MAC3B,QAAQ,IAAI;QACV,KAAK,QAAQ;UACX,KAAK,CAAC,OAAO,CAAC;YACZ,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;WACX,CAAC,CAAC;UACH,MAAM;;QAER,KAAK,OAAO;UACV,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;UACpB,MAAM;;QAER;UACE,KAAK,CAAC,OAAO,CAAC;YACZ,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,KAAK;WACZ,CAAC,CAAC;UACH,MAAM;OACT;;MAED,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;;MAEnB,IAAI,KAAK,EAAE;QACT,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;OAC9B,MAAM;QACL,IAAI,GAAG,IAAI,CAAC;OACb;KACF;;IAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;IAEpB,IAAI,OAAO,GAAG,CAAC,MAAM,KAAK,UAAU,EAAE;MACpC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;KACzB;GACF;;EAED,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,aAAa,EAAE;IACxD,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY;MAC3D,OAAO,IAAI,CAAC;KACb,CAAC;GACH;;EAED,cAAc,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,GAAG,EAAE;IAC7C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;GAClC,CAAC;;EAEF,cAAc,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,GAAG,EAAE;IAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;GACnC,CAAC;;EAEF,cAAc,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,GAAG,EAAE;IAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;GACpC,CAAC;;EAEF,OAAO;IACL,IAAI,EAAE,UAAU,EAAE,EAAE;MAClB,OAAO,YAAY;QACjB,OAAO,IAAI,cAAc,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;OACtD,CAAC;KACH;IACD,KAAK,EAAE,UAAU,KAAK,EAAE;MACtB,OAAO,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;KAC9B;GACF,CAAC;CACH,EAAE,CAAC;;;;;;AAMJ,IAAI,cAAc,GAAG,UAAU,QAAQ,EAAE,WAAW,EAAE;EACpD,IAAI,EAAE,QAAQ,YAAY,WAAW,CAAC,EAAE;IACtC,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,CAAC;GAC1D;CACF,CAAC;;AAEF,IAAI,WAAW,GAAG,YAAY;EAC5B,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE;IACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACrC,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;MAC1B,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,KAAK,CAAC;MACvD,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC;MAC/B,IAAI,OAAO,IAAI,UAAU,EAAE,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;MACtD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;KAC3D;GACF;;EAED,OAAO,UAAU,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE;IACrD,IAAI,UAAU,EAAE,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACpE,IAAI,WAAW,EAAE,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAC5D,OAAO,WAAW,CAAC;GACpB,CAAC;CACH,EAAE,CAAC;;;;;;;;AAQJ,IAAI,UAAU,GAAG,YAAY;EAC3B,SAAS,UAAU,GAAG;IACpB,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;GAClC;;EAED,WAAW,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC;IAC7B,GAAG,EAAE,wBAAwB;;;;;;;IAO7B,KAAK,EAAE,SAAS,sBAAsB,GAAG;MACvC,IAAI,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;MACtC,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;MAC7D,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;KACrB;;;;;;;;;;GAUF,EAAE;IACD,GAAG,EAAE,sBAAsB;IAC3B,KAAK,EAAE,SAAS,oBAAoB,CAAC,IAAI,EAAE;MACzC,IAAI,SAAS,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;MACrC,IAAI,GAAG,GAAG,EAAE;UACR,GAAG,GAAG,CAAC;UACP,CAAC,GAAG,CAAC,CAAC;;MAEV,OAAO,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE;QAC7B,IAAI,EAAE,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;QAC1B,IAAI,EAAE,GAAG,GAAG,EAAE;UACZ,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;SACpC,MAAM,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE;UAC/B,IAAI,EAAE,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;UAC1B,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;SAC1D,MAAM,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE;;UAE/B,IAAI,EAAE,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;UAC1B,IAAI,EAAE,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;UAC1B,IAAI,EAAE,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;UAC1B,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,OAAO,CAAC;UAChF,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;UACnD,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SACrD,MAAM;UACL,IAAI,EAAE,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;UAC1B,IAAI,EAAE,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;UAC1B,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;SAC5E;OACF;MACD,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACrB;GACF,EAAE;IACD,GAAG,EAAE,sBAAsB;;;;;;;;;;;;IAY3B,KAAK,EAAE,SAAS,oBAAoB,CAAC,GAAG,EAAE;MACxC,IAAI,GAAG,GAAG,EAAE;UACR,CAAC,GAAG,CAAC,CAAC;MACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,EAAE;UACX,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SACd,MAAM,IAAI,CAAC,GAAG,IAAI,EAAE;UACnB,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;UACxB,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;SACzB,MAAM,IAAI,CAAC,CAAC,GAAG,MAAM,KAAK,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,KAAK,MAAM,EAAE;;UAErG,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;UACpE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;UACzB,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;UAC9B,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;UAC7B,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;SACzB,MAAM;UACL,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;UACzB,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;UAC7B,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;SACzB;OACF;;;MAGD,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;KACnC;GACF,EAAE;IACD,GAAG,EAAE,sBAAsB;;;;;;;;IAQ3B,KAAK,EAAE,SAAS,oBAAoB,CAAC,GAAG,EAAE;MACxC,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;KAC7D;;;;;;;;;GASF,EAAE;IACD,GAAG,EAAE,sBAAsB;IAC3B,KAAK,EAAE,SAAS,oBAAoB,CAAC,GAAG,EAAE;MACxC,IAAI,GAAG,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;MACtC,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;MAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;OAChC;MACD,OAAO,GAAG,CAAC;KACZ;;;;;;;;;GASF,EAAE;IACD,GAAG,EAAE,oBAAoB;IACzB,KAAK,EAAE,SAAS,kBAAkB,CAAC,GAAG,EAAE,MAAM,EAAE;MAC9C,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;MAEvF,IAAI,UAAU,GAAG,CAAC,EAAE;QAClB,OAAO,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;QACpD,OAAO;OACR;;MAED,IAAI,CAAC,MAAM,IAAI,EAAE,MAAM,YAAY,WAAW,CAAC,EAAE;QAC/C,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;QACxD,OAAO;OACR;;MAED,IAAI,GAAG,CAAC,MAAM,GAAG,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE;QAC/C,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;QACpE,OAAO;OACR;;MAED,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;;MAErC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,OAAO,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;OAC7C;KACF;;;;;;;;;;GAUF,EAAE;IACD,GAAG,EAAE,sBAAsB;IAC3B,KAAK,EAAE,SAAS,oBAAoB,CAAC,MAAM,EAAE,SAAS,EAAE;MACtD,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;MAEvF,IAAI,UAAU,GAAG,CAAC,EAAE;QAClB,OAAO,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC;OACb;;MAED,IAAI,CAAC,MAAM,IAAI,EAAE,MAAM,YAAY,WAAW,CAAC,EAAE;QAC/C,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC;OACb;;MAED,IAAI,SAAS,GAAG,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE;QAC9C,OAAO,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;QACpE,OAAO,IAAI,CAAC;OACb;;MAED,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;KACvF;;;;;;;;;GASF,EAAE;IACD,GAAG,EAAE,qBAAqB;IAC1B,KAAK,EAAE,SAAS,mBAAmB,CAAC,GAAG,EAAE;MACvC,IAAI,IAAI,GAAG,IAAI,CAAC;MAChB,IAAI,aAAa,GAAG,UAAU,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;;MAE1D,IAAI;QACF,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC3C,IAAI,GAAG,UAAU,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;OAChD,CAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OACjB;;MAED,OAAO,IAAI,CAAC;KACb;;;;;;;;;GASF,EAAE;IACD,GAAG,EAAE,qBAAqB;IAC1B,KAAK,EAAE,SAAS,mBAAmB,CAAC,IAAI,EAAE;MACxC,IAAI,GAAG,GAAG,IAAI,CAAC;;MAEf,IAAI;QACF,IAAI,MAAM,GAAG,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACnD,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;OAC1B,CAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OACjB;;MAED,OAAO,GAAG,CAAC;KACZ;;;;;;;;GAQF,EAAE;IACD,GAAG,EAAE,cAAc;IACnB,KAAK,EAAE,SAAS,YAAY,CAAC,GAAG,EAAE;MAChC,OAAO,GAAG,YAAY,SAAS,IAAI,GAAG,YAAY,UAAU,IAAI,GAAG,YAAY,iBAAiB,IAAI,GAAG,YAAY,UAAU,IAAI,GAAG,YAAY,WAAW,IAAI,GAAG,YAAY,UAAU,IAAI,GAAG,YAAY,WAAW,IAAI,GAAG,YAAY,YAAY,IAAI,GAAG,YAAY,YAAY,CAAC;KACtR;;;;;;;;GAQF,EAAE;IACD,GAAG,EAAE,cAAc;IACnB,KAAK,EAAE,SAAS,YAAY,CAAC,cAAc,EAAE;MAC3C,IAAI,aAAa,GAAG,CAAC,CAAC;;MAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC9C,aAAa,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;OAC/C;;MAED,IAAI,WAAW,GAAG,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC;;MAEhD,IAAI,MAAM,GAAG,CAAC,CAAC;MACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC9C,WAAW,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAC3D,MAAM,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;OACxC;;MAED,OAAO,WAAW,CAAC,MAAM,CAAC;KAC3B;;;;;;;;GAQF,EAAE;IACD,GAAG,EAAE,iBAAiB;IACtB,KAAK,EAAE,SAAS,eAAe,GAAG;MAChC,IAAI,eAAe,GAAG,IAAI,CAAC;;MAE3B,IAAI;QACF,eAAe,GAAG,MAAM,CAAC;OAC1B,CAAC,OAAO,CAAC,EAAE;QACV,IAAI;UACF,eAAe,GAAG,MAAM,CAAC;SAC1B,CAAC,OAAO,CAAC,EAAE;UACV,OAAO,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;UACjE,OAAO,IAAI,CAAC;SACb;OACF;MACD,OAAO,eAAe,CAAC;KACxB;;;;;;;;;;;GAWF,EAAE;IACD,GAAG,EAAE,mBAAmB;IACxB,KAAK,EAAE,SAAS,iBAAiB,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,gBAAgB,EAAE;MACjF,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;OACb;;MAED,IAAI,EAAE,MAAM,YAAY,WAAW,CAAC,EAAE;QACpC,OAAO,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC;OACb;;MAED,IAAI,gBAAgB,IAAI,CAAC,EAAE;QACzB,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC;OACb;;MAED,IAAI,UAAU,GAAG,CAAC,EAAE;QAClB,OAAO,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC;OACb;;MAED,IAAI,UAAU,IAAI,MAAM,CAAC,UAAU,EAAE;QACnC,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;QACzE,OAAO,IAAI,CAAC;OACb;;MAED,IAAI,SAAS,YAAY,QAAQ,IAAI,EAAE,mBAAmB,IAAI,SAAS,CAAC,EAAE;QACxE,OAAO,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC;OACb;;MAED,IAAI,SAAS,CAAC,iBAAiB,GAAG,gBAAgB,GAAG,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE;QACnF,OAAO,CAAC,IAAI,CAAC,+DAA+D,CAAC,CAAC;QAC9E,OAAO;OACR;;MAED,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,UAAU,GAAG,gBAAgB,GAAG,SAAS,CAAC,iBAAiB,CAAC,CAAC;MACvG,OAAO,IAAI,SAAS,CAAC,UAAU,CAAC,CAAC;KAClC;;;;;;;;GAQF,EAAE;IACD,GAAG,EAAE,mBAAmB;IACxB,KAAK,EAAE,SAAS,iBAAiB,CAAC,UAAU,EAAE;MAC5C,IAAI,IAAI,GAAG,IAAI,CAAC;MAChB,IAAI,MAAM,GAAG,KAAK,CAAC;;MAEnB,IAAI,UAAU,YAAY,SAAS,EAAE;QACnC,IAAI,GAAG,KAAK,CAAC;QACb,MAAM,GAAG,KAAK,CAAC;OAChB,MAAM,IAAI,UAAU,YAAY,UAAU,EAAE;QAC3C,IAAI,GAAG,KAAK,CAAC;QACb,MAAM,GAAG,IAAI,CAAC;OACf,MAAM,IAAI,UAAU,YAAY,iBAAiB,EAAE;QAClD,IAAI,GAAG,KAAK,CAAC;QACb,MAAM,GAAG,IAAI,CAAC;OACf,MAAM,IAAI,UAAU,YAAY,UAAU,EAAE;QAC3C,IAAI,GAAG,KAAK,CAAC;QACb,MAAM,GAAG,KAAK,CAAC;OAChB,MAAM,IAAI,UAAU,YAAY,WAAW,EAAE;QAC5C,IAAI,GAAG,KAAK,CAAC;QACb,MAAM,GAAG,IAAI,CAAC;OACf,MAAM,IAAI,UAAU,YAAY,UAAU,EAAE;QAC3C,IAAI,GAAG,KAAK,CAAC;QACb,MAAM,GAAG,KAAK,CAAC;OAChB,MAAM,IAAI,UAAU,YAAY,WAAW,EAAE;QAC5C,IAAI,GAAG,KAAK,CAAC;QACb,MAAM,GAAG,IAAI,CAAC;OACf,MAAM,IAAI,UAAU,YAAY,YAAY,EAAE;QAC7C,IAAI,GAAG,OAAO,CAAC;QACf,MAAM,GAAG,KAAK,CAAC;OAChB,MAAM,IAAI,UAAU,YAAY,YAAY,EAAE;QAC7C,IAAI,GAAG,OAAO,CAAC;QACf,MAAM,GAAG,KAAK,CAAC;OAChB;;MAED,OAAO;QACL,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,MAAM;QACd,gBAAgB,EAAE,UAAU,CAAC,iBAAiB;QAC9C,UAAU,EAAE,UAAU,CAAC,UAAU;QACjC,MAAM,EAAE,UAAU,CAAC,MAAM;OAC1B,CAAC;KACH;;;;;;;;GAQF,EAAE;IACD,GAAG,EAAE,6BAA6B;IAClC,KAAK,EAAE,SAAS,2BAA2B,CAAC,GAAG,EAAE;MAC/C,IAAI,aAAa,GAAG,CAAC,CAAC;MACtB,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QACnC,aAAa,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;OAC7C,CAAC,CAAC;MACH,OAAO,aAAa,CAAC;KACtB;;;;;;;;;GASF,EAAE;IACD,GAAG,EAAE,sBAAsB;IAC3B,KAAK,EAAE,SAAS,oBAAoB,CAAC,GAAG,EAAE;MACxC,IAAI,WAAW,GAAG,KAAK,CAAC;MACxB,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QACnC,IAAI,IAAI,CAAC,QAAQ,EAAE;UACjB,WAAW,GAAG,IAAI,CAAC;SACpB;OACF,CAAC,CAAC;MACH,OAAO,WAAW,CAAC;KACpB;;;;;;;;;GASF,EAAE;IACD,GAAG,EAAE,yBAAyB;IAC9B,KAAK,EAAE,SAAS,uBAAuB,CAAC,GAAG,EAAE;MAC3C,IAAI,WAAW,GAAG,KAAK,CAAC;MACxB,IAAI,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;QAClD,IAAI,IAAI,CAAC,QAAQ,EAAE;UACjB,IAAI,CAAC,MAAM,EAAE,CAAC;UACd,WAAW,GAAG,IAAI,CAAC;SACpB;OACF,CAAC,CAAC;MACH,OAAO,WAAW,GAAG,YAAY,GAAG,IAAI,CAAC;KAC1C;;;;;;;;GAQF,EAAE;IACD,GAAG,EAAE,qCAAqC;IAC1C,KAAK,EAAE,SAAS,mCAAmC,CAAC,GAAG,EAAE;MACvD,IAAI,aAAa,GAAG,KAAK,CAAC;;MAE1B,IAAI,eAAe,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;QACrD,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;;;UAG9B,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;UACrC,IAAI,YAAY,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;;UAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;YACjC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;WACxB;UACD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;UAC1B,aAAa,GAAG,IAAI,CAAC;SACtB;OACF,CAAC,CAAC;MACH,OAAO,aAAa,GAAG,eAAe,GAAG,IAAI,CAAC;KAC/C;;;;;;;;;;GAUF,EAAE;IACD,GAAG,EAAE,uBAAuB;IAC5B,KAAK,EAAE,SAAS,qBAAqB,CAAC,GAAG,EAAE;MACzC,IAAI,MAAM,GAAG,GAAG,CAAC;MACjB,IAAI,UAAU,GAAG,UAAU,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;;MAE5D,IAAI,UAAU,EAAE,MAAM,GAAG,UAAU,CAAC;;MAEpC,IAAI,UAAU,GAAG,UAAU,CAAC,mCAAmC,CAAC,MAAM,CAAC,CAAC;;MAExE,IAAI,UAAU,EAAE,MAAM,GAAG,UAAU,CAAC;;MAEpC,OAAO,MAAM,CAAC;KACf;GACF,CAAC,CAAC,CAAC;EACJ,OAAO,UAAU,CAAC;CACnB,EAAE,CAAC,8BAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACh9BjC;;;;;;;;;;;;;;;;;IAkBKA;eACSC,MAAb,EAAqBC,UAArB,EAAiCC,eAAjC,EAAkD;;;SAC3CC,OAAL,GAAeH,MAAf;SACKI,gBAAL,GAAwBF,eAAxB;SACKG,WAAL,GAAmBJ,UAAnB;;;;;;;;;;;wCAOiB;aACV,KAAKE,OAAL,CAAaG,sBAApB;;;;;;;;;;qCAQc;aACP,KAAKH,OAAL,CAAaI,gBAApB;;;;;;;;;;;yCASkB;aACX,KAAKJ,OAAL,CAAaK,aAApB;;;;;;;;;;;yCASkB;aACX,KAAKL,OAAL,CAAaM,SAApB;;;;;;;;;;mCAQY;aACL,KAAKN,OAAL,CAAaO,SAApB;;;;;;;;;;4CAQqB;aACd,KAAKP,OAAL,CAAaQ,aAApB;;;;;;;;;;;;uCAU0B;UAAVC,KAAU,uEAAJ,CAAC,CAAG;;UACtBA,UAAU,CAAC,CAAf,EAAkB;eACT,KAAKT,OAAL,CAAaU,QAApB;OADF,MAEK;YACCD,SAAS,CAAT,IAAcA,QAAQ,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;iBACjD,KAAKZ,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BC,QAAtC;;;;aAIG,IAAP;;;;;;;;;;;wCASmBD,OAAO;UACtBA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BK,cAAtC;;;;;;;;;;;wCASmBL,OAAO;UACtBA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BM,cAAtC;;;;;;;;;;;yCASoBN,OAAO;UACvBA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BO,eAAtC;;;;;;;;;;;yCASoBP,OAAO;UACvBA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BQ,eAAtC;;;;;;;;;;;mCAScR,OAAO;UACjBA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BS,KAAtC;;;;;;;;;;;sDASiCT,OAAO;UACpCA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BU,WAAtC;;;;;;;;;;;;0CAUqBV,OAAO;UACxBA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BW,iBAAtC;;;;;;;;;;;0CASqBX,OAAO;UACxBA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BY,YAAtC;;;;;;;;;;;4CASuBZ,OAAO;UAC1BA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+Ba,cAAtC;;;;;;;;;;;+CAS0Bb,OAAO;UAC7BA,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKb,OAAL,CAAaW,UAAb,CAAwBF,KAAxB,EAA+BU,WAA/B,GAA6C,KAAKnB,OAAL,CAAaG,sBAAjE;;;;;;;;;;;;sCASiBM,OAAOc,QAAQ;UAC5Bd,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;UAGEU,SAAO,CAAP,IAAYA,UAAQ,KAAKtB,gBAAL,CAAsBQ,KAAtB,EAA6BG,MAArD,EAA6D;gBACnDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKZ,gBAAL,CAAsBQ,KAAtB,EAA6Bc,MAA7B,CAAP;;;;;;;;;;;;iCAUYd,OAAOc,QAAQ;UACvBd,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;UAGEU,SAAO,CAAP,IAAYA,UAAQ,KAAKrB,WAAL,CAAiBO,KAAjB,EAAwBG,MAAhD,EAAwD;gBAC9CC,IAAR,CAAa,8BAAb;eACO,IAAP;;;aAGK,KAAKX,WAAL,CAAiBO,KAAjB,EAAwBc,MAAxB,CAAP;;;;;;;;;;;;;;;mDAc6Bd,OAAkC;UAA3Be,WAA2B,uEAAf,CAAC,CAAc;UAAXC,OAAW,uEAAH,CAAC,CAAE;;UAC3DhB,QAAQ,CAAR,IAAaA,SAAS,KAAKT,OAAL,CAAaW,UAAb,CAAwBC,MAAlD,EAA0D;gBAChDC,IAAR,CAAa,8BAAb;eACO,IAAP;;;UAGEW,cAAY,CAAZ,IAAiBA,eAAa,KAAKvB,gBAAL,CAAsBQ,KAAtB,EAA6BG,MAA/D,EAAuE;gBAC7DC,IAAR,CAAa,uCAAb;eACO,IAAP;;;UAGCW,gBAAgB,CAAC,CAApB,EAAsB;sBACN,CAAd;;;UAGCC,YAAY,CAAC,CAAhB,EAAkB;kBACN,KAAKxB,gBAAL,CAAsBQ,KAAtB,EAA6BG,MAA7B,GAAsCY,WAAhD;OADF,MAEK;;YAECA,cAAcC,OAAd,GAAwB,KAAKxB,gBAAL,CAAsBQ,KAAtB,EAA6BG,MAAzD,EAAiE;kBACvDC,IAAR,CAAa,kFAAb;oBACU,KAAKZ,gBAAL,CAAsBQ,KAAtB,EAA6BG,MAA7B,GAAsCY,WAAhD;;;;;UAMAE,YAAYF,cAAcC,OAAd,GAAwB,CAAxC;;UAEIC,YAAU,CAAV,IAAeA,aAAW,KAAKzB,gBAAL,CAAsBQ,KAAtB,EAA6BG,MAA3D,EAAmE;gBACzDC,IAAR,CAAa,0DAAb;eACO,IAAP;;;UAGEc,YAAY,CAAhB;WACI,IAAIC,IAAEJ,WAAV,EAAuBI,IAAEJ,cAAcC,OAAvC,EAAgDG,GAAhD,EAAoD;qBACrC,KAAK3B,gBAAL,CAAsBQ,KAAtB,EAA6BmB,CAA7B,EAAgChB,MAA7C;;;UAGEiB,eAAe,IAAIC,YAAJ,CAAkBH,SAAlB,CAAnB;UACII,SAAS,CAAb;;WAEI,IAAIH,IAAEJ,WAAV,EAAuBI,IAAEJ,cAAcC,OAAvC,EAAgDG,GAAhD,EAAoD;qBACrCI,GAAb,CAAkB,KAAK/B,gBAAL,CAAsBQ,KAAtB,EAA6BmB,CAA7B,CAAlB,EAAmDG,MAAnD;kBACU,KAAK9B,gBAAL,CAAsBQ,KAAtB,EAA6BmB,CAA7B,EAAgChB,MAA1C;;;aAGKiB,YAAP;;;;;;AC7VJ;;;;;;;AAQA,AAIA;;;;;;;IAMMI;;;;;wBAKW;;;SACRC,YAAL,GAAoB,IAApB;SACKC,OAAL,GAAe,IAAf;;;;;;;;;;;6BAQQC,MAAM;WACTD,OAAL,GAAe,IAAf;WACKD,YAAL,GAAoBE,IAApB;;;;;;;;;6BAOM;UACH;YACGC,aAAa,KAAKC,aAAL,EAAjB;aACKC,WAAL,CAAkBF,WAAWN,MAA7B,EAAqCM,WAAWxC,MAAhD;OAFF,CAGC,OAAM2C,CAAN,EAAQ;gBACC3B,IAAR,CAAc2B,CAAd;;;;;;;;;;;oCAWW;UACV,CAAE,KAAKN,YAAV,EAAwB;gBACdrB,IAAR,CAAa,mCAAb;;;;UAIEhB,SAAS,EAAb;UACIkC,SAAS,CAAb;;;aAGOU,UAAP,GAAoBC,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,CAArD,EAAwDH,MAAxD,EAAgEa,IAAhE,EAApB;gBACU,CAAV;;;aAGOrC,SAAP,GAAmBmC,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,EAArD,EAAyDH,MAAzD,EAAiEa,IAAjE,EAAnB;gBACU,EAAV;;;aAGOxC,gBAAP,GAA0BsC,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,EAArD,EAAyDH,MAAzD,EAAiEa,IAAjE,EAA1B;gBACU,EAAV;;;UAGIC,qBAAqBH,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,CAArD,EAAwDH,MAAxD,EAAgEa,IAAhE,EAAzB;gBACU,CAAV;;;UAGIE,qBAAqBJ,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,CAArD,EAAwDH,MAAxD,EAAgEa,IAAhE,EAAzB;gBACU,CAAV;;UAEIG,OAAOF,mBAAmBG,KAAnB,CAAyB,GAAzB,CAAX;UACIC,OAAOH,mBAAmBE,KAAnB,CAAyB,GAAzB,CAAX;aACOxC,aAAP,GAAuB,IAAI0C,IAAJ,CAAUH,KAAK,CAAL,CAAV,EAAmBA,KAAK,CAAL,CAAnB,EAA4BA,KAAK,CAAL,CAA5B,EAAqCE,KAAK,CAAL,CAArC,EAA8CA,KAAK,CAAL,CAA9C,EAAuDA,KAAK,CAAL,CAAvD,EAAgE,CAAhE,CAAvB;;;aAGOE,mBAAP,GAA6BC,SAAUV,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,CAArD,EAAwDH,MAAxD,EAAgEa,IAAhE,EAAV,CAA7B;gBACU,CAAV;;;aAGOlC,QAAP,GAAkBgC,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,EAArD,EAAyDH,MAAzD,CAAlB;gBACU,EAAV;;;aAGO1B,aAAP,GAAuB+C,SAAUV,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,CAArD,EAAwDH,MAAxD,EAAgEa,IAAhE,EAAV,CAAvB;gBACU,CAAV;;;aAGOzC,sBAAP,GAAgCiD,SAAUV,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,CAArD,EAAwDH,MAAxD,EAAgEa,IAAhE,EAAV,CAAhC;gBACU,CAAV;;;aAGOtC,SAAP,GAAmB8C,SAAUV,WAAWC,oBAAX,CAAiC,KAAKT,YAAtC,EAAqD,CAArD,EAAwDH,MAAxD,EAAgEa,IAAhE,EAAV,CAAnB;gBACU,CAAV;;;UAGIS,OAAO,IAAX;eACSC,cAAT,CAAyBC,eAAzB,EAA0C;YACpCC,YAAY,EAAhB;aACI,IAAI5B,IAAE,CAAV,EAAaA,IAAE/B,OAAOS,SAAtB,EAAiCsB,GAAjC,EAAqC;oBACzB6B,IAAV,CAAgBf,WAAWC,oBAAX,CAAiCU,KAAKnB,YAAtC,EAAqDqB,eAArD,EAAsExB,MAAtE,EAA+Ea,IAA/E,EAAhB;oBACUW,eAAV;;eAEKC,SAAP;;;UAGEE,mBAAmB;;eAEdJ,eAAgB,EAAhB,CAFc;;wBAILA,eAAgB,EAAhB,CAJK;;2BAMFA,eAAgB,CAAhB,CANE;;yBAQJA,eAAgB,CAAhB,CARI;;yBAUJA,eAAgB,CAAhB,CAVI;;wBAYLA,eAAgB,CAAhB,CAZK;;wBAcLA,eAAgB,CAAhB,CAdK;;sBAgBPA,eAAgB,EAAhB,CAhBO;;qBAkBRA,eAAgB,CAAhB,CAlBQ;;kBAoBXA,eAAgB,EAAhB;OApBZ;;UAuBI3C,aAAa,EAAjB;aACOA,UAAP,GAAoBA,UAApB;WACI,IAAIiB,IAAE,CAAV,EAAaA,IAAE/B,OAAOS,SAAtB,EAAiCsB,GAAjC,EAAqC;mBACxB6B,IAAX,CAAgB;iBACPC,iBAAiBxC,KAAjB,CAAuBU,CAAvB,CADO;0BAEE8B,iBAAiBpC,cAAjB,CAAgCM,CAAhC,CAFF;6BAGK8B,iBAAiBtC,iBAAjB,CAAmCQ,CAAnC,CAHL;2BAIG+B,WAAYD,iBAAiB1C,eAAjB,CAAiCY,CAAjC,CAAZ,CAJH;2BAKG+B,WAAYD,iBAAiBzC,eAAjB,CAAiCW,CAAjC,CAAZ,CALH;0BAMEwB,SAAUM,iBAAiB3C,cAAjB,CAAgCa,CAAhC,CAAV,CANF;0BAOEwB,SAAUM,iBAAiB5C,cAAjB,CAAgCc,CAAhC,CAAV,CAPF;wBAQA8B,iBAAiBrC,YAAjB,CAA8BO,CAA9B,CARA;uBASDwB,SAAUM,iBAAiBvC,WAAjB,CAA6BS,CAA7B,CAAV,CATC;oBAUJ8B,iBAAiBhD,QAAjB,CAA0BkB,CAA1B;SAVZ;;;aAcK;gBACGG,MADH;gBAEGlC;OAFV;;;;;;;;;;;gCAYW+D,YAAY/D,QAAQ;UAC5B,CAAE,KAAKqC,YAAV,EAAwB;gBACdrB,IAAR,CAAa,mCAAb;;;;UAIC,CAAEhB,MAAL,EAAa;gBACHgB,IAAR,CAAa,gBAAb;;;;UAIEgD,aAAaC,UAAjB;;;UAGIhE,aAAa,IAAIiE,KAAJ,CAAUlE,OAAOS,SAAjB,CAAjB;UACIP,kBAAkB,IAAIgE,KAAJ,CAAUlE,OAAOS,SAAjB,CAAtB;;WAEI,IAAI0D,KAAG,CAAX,EAAcA,KAAGnE,OAAOS,SAAxB,EAAmC0D,IAAnC,EAAwC;mBAC3BA,EAAX,IAAiB,IAAID,KAAJ,CAAUlE,OAAOQ,aAAjB,CAAjB;wBACgB2D,EAAhB,IAAsB,IAAID,KAAJ,CAAUlE,OAAOQ,aAAjB,CAAtB;;;;WAIE,IAAI4D,IAAE,CAAV,EAAaA,IAAEpE,OAAOQ,aAAtB,EAAqC4D,GAArC,EAAyC;aACnC,IAAID,KAAG,CAAX,EAAcA,KAAGnE,OAAOS,SAAxB,EAAmC0D,IAAnC,EAAwC;cAClCE,kBAAkBrE,OAAOc,UAAP,CAAkBqD,EAAlB,EAAsB7C,WAA5C;cACIgD,YAAYzB,WAAW0B,iBAAX,CAA8B,KAAKlC,YAAnC,EAAiD0B,UAAjD,EAA6DC,UAA7D,EAAyEK,eAAzE,CAAhB;wBACcA,kBAAkBL,WAAWQ,iBAA3C;qBACWL,EAAX,EAAeC,CAAf,IAAoBE,SAApB;;;cAIIG,iBAAiB,IAAIxC,YAAJ,CAAkBqC,UAAUvD,MAA5B,EAAqC2D,IAArC,CAA0C,CAA1C,CAArB;cACIC,qBAAqB3E,OAAOc,UAAP,CAAkBqD,EAAlB,EAAsBlD,cAAtB,GAAuCjB,OAAOc,UAAP,CAAkBqD,EAAlB,EAAsBjD,cAAtF;cACI0D,sBAAsB5E,OAAOc,UAAP,CAAkBqD,EAAlB,EAAsB/C,eAAtB,GAAwCpB,OAAOc,UAAP,CAAkBqD,EAAlB,EAAsBhD,eAAxF;;eAGI,IAAIP,QAAM,CAAd,EAAiBA,QAAMyD,eAAvB,EAAwCzD,OAAxC,EAAgD;2BAC9BA,KAAhB,IAA4B,CAAC0D,UAAU1D,KAAV,IAAmBZ,OAAOc,UAAP,CAAkBqD,EAAlB,EAAsBjD,cAA1C,IAA4DyD,kBAA7D,GAAoFC,mBAArF,GAA4G5E,OAAOc,UAAP,CAAkBqD,EAAlB,EAAsBhD,eAA5J;;;;0BAIcgD,EAAhB,EAAoBC,CAApB,IAAyBK,cAAzB;;;;WAKCnC,OAAL,GAAe,IAAIvC,GAAJ,CAASC,MAAT,EAAiBC,UAAjB,EAA6BC,eAA7B,CAAf;;;;;;;;;;;;gCAaS;aACF,KAAKoC,OAAZ;;;;;;;;;;;;;;;;;"}