{"version":3,"file":"edfdecoder.cjs.js","sources":["../node_modules/codecutils/dist/codecutils.umd.js","../src/Edf.js","../src/EdfDecoder.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.codecutils = {})));\n}(this, (function (exports) { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar traverse_1 = createCommonjsModule(function (module) {\n\tvar traverse = module.exports = function (obj) {\n\t    return new Traverse(obj);\n\t};\n\n\tfunction Traverse (obj) {\n\t    this.value = obj;\n\t}\n\n\tTraverse.prototype.get = function (ps) {\n\t    var node = this.value;\n\t    for (var i = 0; i < ps.length; i ++) {\n\t        var key = ps[i];\n\t        if (!node || !hasOwnProperty.call(node, key)) {\n\t            node = undefined;\n\t            break;\n\t        }\n\t        node = node[key];\n\t    }\n\t    return node;\n\t};\n\n\tTraverse.prototype.has = function (ps) {\n\t    var node = this.value;\n\t    for (var i = 0; i < ps.length; i ++) {\n\t        var key = ps[i];\n\t        if (!node || !hasOwnProperty.call(node, key)) {\n\t            return false;\n\t        }\n\t        node = node[key];\n\t    }\n\t    return true;\n\t};\n\n\tTraverse.prototype.set = function (ps, value) {\n\t    var node = this.value;\n\t    for (var i = 0; i < ps.length - 1; i ++) {\n\t        var key = ps[i];\n\t        if (!hasOwnProperty.call(node, key)) node[key] = {};\n\t        node = node[key];\n\t    }\n\t    node[ps[i]] = value;\n\t    return value;\n\t};\n\n\tTraverse.prototype.map = function (cb) {\n\t    return walk(this.value, cb, true);\n\t};\n\n\tTraverse.prototype.forEach = function (cb) {\n\t    this.value = walk(this.value, cb, false);\n\t    return this.value;\n\t};\n\n\tTraverse.prototype.reduce = function (cb, init) {\n\t    var skip = arguments.length === 1;\n\t    var acc = skip ? this.value : init;\n\t    this.forEach(function (x) {\n\t        if (!this.isRoot || !skip) {\n\t            acc = cb.call(this, acc, x);\n\t        }\n\t    });\n\t    return acc;\n\t};\n\n\tTraverse.prototype.paths = function () {\n\t    var acc = [];\n\t    this.forEach(function (x) {\n\t        acc.push(this.path); \n\t    });\n\t    return acc;\n\t};\n\n\tTraverse.prototype.nodes = function () {\n\t    var acc = [];\n\t    this.forEach(function (x) {\n\t        acc.push(this.node);\n\t    });\n\t    return acc;\n\t};\n\n\tTraverse.prototype.clone = function () {\n\t    var parents = [], nodes = [];\n\t    \n\t    return (function clone (src) {\n\t        for (var i = 0; i < parents.length; i++) {\n\t            if (parents[i] === src) {\n\t                return nodes[i];\n\t            }\n\t        }\n\t        \n\t        if (typeof src === 'object' && src !== null) {\n\t            var dst = copy(src);\n\t            \n\t            parents.push(src);\n\t            nodes.push(dst);\n\t            \n\t            forEach(objectKeys(src), function (key) {\n\t                dst[key] = clone(src[key]);\n\t            });\n\t            \n\t            parents.pop();\n\t            nodes.pop();\n\t            return dst;\n\t        }\n\t        else {\n\t            return src;\n\t        }\n\t    })(this.value);\n\t};\n\n\tfunction walk (root, cb, immutable) {\n\t    var path = [];\n\t    var parents = [];\n\t    var alive = true;\n\t    \n\t    return (function walker (node_) {\n\t        var node = immutable ? copy(node_) : node_;\n\t        var modifiers = {};\n\t        \n\t        var keepGoing = true;\n\t        \n\t        var state = {\n\t            node : node,\n\t            node_ : node_,\n\t            path : [].concat(path),\n\t            parent : parents[parents.length - 1],\n\t            parents : parents,\n\t            key : path.slice(-1)[0],\n\t            isRoot : path.length === 0,\n\t            level : path.length,\n\t            circular : null,\n\t            update : function (x, stopHere) {\n\t                if (!state.isRoot) {\n\t                    state.parent.node[state.key] = x;\n\t                }\n\t                state.node = x;\n\t                if (stopHere) keepGoing = false;\n\t            },\n\t            'delete' : function (stopHere) {\n\t                delete state.parent.node[state.key];\n\t                if (stopHere) keepGoing = false;\n\t            },\n\t            remove : function (stopHere) {\n\t                if (isArray(state.parent.node)) {\n\t                    state.parent.node.splice(state.key, 1);\n\t                }\n\t                else {\n\t                    delete state.parent.node[state.key];\n\t                }\n\t                if (stopHere) keepGoing = false;\n\t            },\n\t            keys : null,\n\t            before : function (f) { modifiers.before = f; },\n\t            after : function (f) { modifiers.after = f; },\n\t            pre : function (f) { modifiers.pre = f; },\n\t            post : function (f) { modifiers.post = f; },\n\t            stop : function () { alive = false; },\n\t            block : function () { keepGoing = false; }\n\t        };\n\t        \n\t        if (!alive) return state;\n\t        \n\t        function updateState() {\n\t            if (typeof state.node === 'object' && state.node !== null) {\n\t                if (!state.keys || state.node_ !== state.node) {\n\t                    state.keys = objectKeys(state.node);\n\t                }\n\t                \n\t                state.isLeaf = state.keys.length == 0;\n\t                \n\t                for (var i = 0; i < parents.length; i++) {\n\t                    if (parents[i].node_ === node_) {\n\t                        state.circular = parents[i];\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                state.isLeaf = true;\n\t                state.keys = null;\n\t            }\n\t            \n\t            state.notLeaf = !state.isLeaf;\n\t            state.notRoot = !state.isRoot;\n\t        }\n\t        \n\t        updateState();\n\t        \n\t        // use return values to update if defined\n\t        var ret = cb.call(state, state.node);\n\t        if (ret !== undefined && state.update) state.update(ret);\n\t        \n\t        if (modifiers.before) modifiers.before.call(state, state.node);\n\t        \n\t        if (!keepGoing) return state;\n\t        \n\t        if (typeof state.node == 'object'\n\t        && state.node !== null && !state.circular) {\n\t            parents.push(state);\n\t            \n\t            updateState();\n\t            \n\t            forEach(state.keys, function (key, i) {\n\t                path.push(key);\n\t                \n\t                if (modifiers.pre) modifiers.pre.call(state, state.node[key], key);\n\t                \n\t                var child = walker(state.node[key]);\n\t                if (immutable && hasOwnProperty.call(state.node, key)) {\n\t                    state.node[key] = child.node;\n\t                }\n\t                \n\t                child.isLast = i == state.keys.length - 1;\n\t                child.isFirst = i == 0;\n\t                \n\t                if (modifiers.post) modifiers.post.call(state, child);\n\t                \n\t                path.pop();\n\t            });\n\t            parents.pop();\n\t        }\n\t        \n\t        if (modifiers.after) modifiers.after.call(state, state.node);\n\t        \n\t        return state;\n\t    })(root).node;\n\t}\n\n\tfunction copy (src) {\n\t    if (typeof src === 'object' && src !== null) {\n\t        var dst;\n\t        \n\t        if (isArray(src)) {\n\t            dst = [];\n\t        }\n\t        else if (isDate(src)) {\n\t            dst = new Date(src.getTime ? src.getTime() : src);\n\t        }\n\t        else if (isRegExp(src)) {\n\t            dst = new RegExp(src);\n\t        }\n\t        else if (isError(src)) {\n\t            dst = { message: src.message };\n\t        }\n\t        else if (isBoolean(src)) {\n\t            dst = new Boolean(src);\n\t        }\n\t        else if (isNumber(src)) {\n\t            dst = new Number(src);\n\t        }\n\t        else if (isString(src)) {\n\t            dst = new String(src);\n\t        }\n\t        else if (Object.create && Object.getPrototypeOf) {\n\t            dst = Object.create(Object.getPrototypeOf(src));\n\t        }\n\t        else if (src.constructor === Object) {\n\t            dst = {};\n\t        }\n\t        else {\n\t            var proto =\n\t                (src.constructor && src.constructor.prototype)\n\t                || src.__proto__\n\t                || {}\n\t            ;\n\t            var T = function () {};\n\t            T.prototype = proto;\n\t            dst = new T;\n\t        }\n\t        \n\t        forEach(objectKeys(src), function (key) {\n\t            dst[key] = src[key];\n\t        });\n\t        return dst;\n\t    }\n\t    else return src;\n\t}\n\n\tvar objectKeys = Object.keys || function keys (obj) {\n\t    var res = [];\n\t    for (var key in obj) res.push(key);\n\t    return res;\n\t};\n\n\tfunction toS (obj) { return Object.prototype.toString.call(obj) }\n\tfunction isDate (obj) { return toS(obj) === '[object Date]' }\n\tfunction isRegExp (obj) { return toS(obj) === '[object RegExp]' }\n\tfunction isError (obj) { return toS(obj) === '[object Error]' }\n\tfunction isBoolean (obj) { return toS(obj) === '[object Boolean]' }\n\tfunction isNumber (obj) { return toS(obj) === '[object Number]' }\n\tfunction isString (obj) { return toS(obj) === '[object String]' }\n\n\tvar isArray = Array.isArray || function isArray (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\n\tvar forEach = function (xs, fn) {\n\t    if (xs.forEach) return xs.forEach(fn)\n\t    else for (var i = 0; i < xs.length; i++) {\n\t        fn(xs[i], i, xs);\n\t    }\n\t};\n\n\tforEach(objectKeys(Traverse.prototype), function (key) {\n\t    traverse[key] = function (obj) {\n\t        var args = [].slice.call(arguments, 1);\n\t        var t = new Traverse(obj);\n\t        return t[key].apply(t, args);\n\t    };\n\t});\n\n\tvar hasOwnProperty = Object.hasOwnProperty || function (obj, key) {\n\t    return key in obj;\n\t};\n\t});\n\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\n\tvar createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\n\t/**\n\t* The CodecUtils class gather some static methods that can be useful while\n\t* encodeing/decoding data.\n\t* CodecUtils does not have a constructor, don't try to instanciate it.\n\t*/\n\n\tvar CodecUtils = function () {\n\t  function CodecUtils() {\n\t    classCallCheck(this, CodecUtils);\n\t  }\n\n\t  createClass(CodecUtils, null, [{\n\t    key: \"isPlatformLittleEndian\",\n\n\n\t    /**\n\t    * Get whether or not the platform is using little endian.\n\t    * @return {Boolen } true if the platform is little endian, false if big endian\n\t    */\n\t    value: function isPlatformLittleEndian() {\n\t      var a = new Uint32Array([0x12345678]);\n\t      var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\t      return b[0] != 0x12;\n\t    }\n\n\t    /**\n\t    * convert an ArrayBuffer into a unicode string (2 bytes for each char)\n\t    * Note: this method was kindly borrowed from Google Closure Compiler:\n\t    * https://github.com/google/closure-library/blob/master/closure/goog/crypt/crypt.js\n\t    * @param {ArrayBuffer} buf - input ArrayBuffer\n\t    * @return {String} a string compatible with Unicode characters\n\t    */\n\n\t  }, {\n\t    key: \"arrayBufferToUnicode\",\n\t    value: function arrayBufferToUnicode(buff) {\n\t      var buffUint8 = new Uint8Array(buff);\n\t      var out = [],\n\t          pos = 0,\n\t          c = 0;\n\n\t      while (pos < buffUint8.length) {\n\t        var c1 = buffUint8[pos++];\n\t        if (c1 < 128) {\n\t          if (c1 < 32 && c1 != 10 && c1 != 13 && c1 != 9 || c1 == 127) {\n\t            console.warn(\"Invalid string: non-printable characters\");\n\t            return null;\n\t          }\n\t          out[c++] = String.fromCharCode(c1);\n\t        } else if (c1 > 191 && c1 < 224) {\n\t          var c2 = buffUint8[pos++];\n\t          out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);\n\t        } else if (c1 > 239 && c1 < 365) {\n\t          // Surrogate Pair\n\t          var c2 = buffUint8[pos++];\n\t          var c3 = buffUint8[pos++];\n\t          var c4 = buffUint8[pos++];\n\t          var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;\n\t          out[c++] = String.fromCharCode(0xD800 + (u >> 10));\n\t          out[c++] = String.fromCharCode(0xDC00 + (u & 1023));\n\t        } else {\n\t          var c2 = buffUint8[pos++];\n\t          var c3 = buffUint8[pos++];\n\t          var code = (c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63;\n\t          if (code === 0xFFFD) {\n\t            console.warn(\"Invalid string: a REPLACEMENT CHARACTER was spotted\");\n\t            return null;\n\t          }\n\t          out[c++] = String.fromCharCode(code);\n\t        }\n\t      }\n\t      return out.join('');\n\t    }\n\t  }, {\n\t    key: \"unicodeToArrayBuffer\",\n\n\n\t    /**\n\t    * convert a unicode string into an ArrayBuffer\n\t    * Note that the str is a regular string but it will be encoded with\n\t    * 2 bytes per char instead of 1 ( ASCII uses 1 byte/char ).\n\t    * Note: this method was kindly borrowed from Google Closure Compiler:\n\t    * https://github.com/google/closure-library/blob/master/closure/goog/crypt/crypt.js\n\t    * @param {String} str - string to encode\n\t    * @return {ArrayBuffer} the output ArrayBuffer\n\t    */\n\t    value: function unicodeToArrayBuffer(str) {\n\t      var out = [],\n\t          p = 0;\n\t      for (var i = 0; i < str.length; i++) {\n\t        var c = str.charCodeAt(i);\n\t        if (c < 128) {\n\t          out[p++] = c;\n\t        } else if (c < 2048) {\n\t          out[p++] = c >> 6 | 192;\n\t          out[p++] = c & 63 | 128;\n\t        } else if ((c & 0xFC00) == 0xD800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xFC00) == 0xDC00) {\n\t          // Surrogate Pair\n\t          c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);\n\t          out[p++] = c >> 18 | 240;\n\t          out[p++] = c >> 12 & 63 | 128;\n\t          out[p++] = c >> 6 & 63 | 128;\n\t          out[p++] = c & 63 | 128;\n\t        } else {\n\t          out[p++] = c >> 12 | 224;\n\t          out[p++] = c >> 6 & 63 | 128;\n\t          out[p++] = c & 63 | 128;\n\t        }\n\t      }\n\n\t      // make a buffer out of the array\n\t      return new Uint8Array(out).buffer;\n\t    }\n\t  }, {\n\t    key: \"arrayBufferToString8\",\n\n\n\t    /**\n\t    * Convert an ArrayBuffer into a ASCII string (1 byte for each char)\n\t    * @param {ArrayBuffer} buf - buffer to convert into ASCII string\n\t    * @return {String} the output string\n\t    */\n\t    value: function arrayBufferToString8(buf) {\n\t      return String.fromCharCode.apply(null, new Uint8Array(buf));\n\t    }\n\n\t    /**\n\t    * Convert a ASCII string into an ArrayBuffer.\n\t    * Note that the str is a regular string, it will be encoded with 1 byte per char\n\t    * @param {String} str - string to encode\n\t    * @return {ArrayBuffer}\n\t    */\n\n\t  }, {\n\t    key: \"string8ToArrayBuffer\",\n\t    value: function string8ToArrayBuffer(str) {\n\t      var buf = new ArrayBuffer(str.length);\n\t      var bufView = new Uint8Array(buf);\n\t      for (var i = 0; i < str.length; i++) {\n\t        bufView[i] = str.charCodeAt(i);\n\t      }\n\t      return buf;\n\t    }\n\n\t    /**\n\t    * Write a ASCII string into a buffer\n\t    * @param {String} str - a string that contains only ASCII characters\n\t    * @param {ArrayBuffer} buffer - the buffer where to write the string\n\t    * @param {Number} byteOffset - the offset to apply, in number of bytes\n\t    */\n\n\t  }, {\n\t    key: \"setString8InBuffer\",\n\t    value: function setString8InBuffer(str, buffer) {\n\t      var byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n\t      if (byteOffset < 0) {\n\t        console.warn(\"The byte offset cannot be negative.\");\n\t        return;\n\t      }\n\n\t      if (!buffer || !(buffer instanceof ArrayBuffer)) {\n\t        console.warn(\"The buffer must be a valid ArrayBuffer.\");\n\t        return;\n\t      }\n\n\t      if (str.length + byteOffset > buffer.byteLength) {\n\t        console.warn(\"The string is too long to be writen in this buffer.\");\n\t        return;\n\t      }\n\n\t      var bufView = new Uint8Array(buffer);\n\n\t      for (var i = 0; i < str.length; i++) {\n\t        bufView[i + byteOffset] = str.charCodeAt(i);\n\t      }\n\t    }\n\n\t    /**\n\t    * Extract an ASCII string from an ArrayBuffer\n\t    * @param {ArrayBuffer} buffer - the buffer\n\t    * @param {Number} strLength - number of chars in the string we want\n\t    * @param {Number} byteOffset - the offset in number of bytes\n\t    * @return {String} the string, or null in case of error\n\t    */\n\n\t  }, {\n\t    key: \"getString8FromBuffer\",\n\t    value: function getString8FromBuffer(buffer, strLength) {\n\t      var byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n\t      if (byteOffset < 0) {\n\t        console.warn(\"The byte offset cannot be negative.\");\n\t        return null;\n\t      }\n\n\t      if (!buffer || !(buffer instanceof ArrayBuffer)) {\n\t        console.warn(\"The buffer must be a valid ArrayBuffer.\");\n\t        return null;\n\t      }\n\n\t      if (strLength + byteOffset > buffer.byteLength) {\n\t        console.warn(\"The string is too long to be writen in this buffer.\");\n\t        return null;\n\t      }\n\n\t      return String.fromCharCode.apply(null, new Uint8Array(buffer, byteOffset, strLength));\n\t    }\n\n\t    /**\n\t    * Serializes a JS object into an ArrayBuffer.\n\t    * This is using a unicode JSON intermediate step.\n\t    * @param {Object} obj - an object that does not have cyclic structure\n\t    * @return {ArrayBuffer} the serialized output\n\t    */\n\n\t  }, {\n\t    key: \"objectToArrayBuffer\",\n\t    value: function objectToArrayBuffer(obj) {\n\t      var buff = null;\n\t      var objCleanClone = CodecUtils.makeSerializeFriendly(obj);\n\n\t      try {\n\t        var strObj = JSON.stringify(objCleanClone);\n\t        buff = CodecUtils.unicodeToArrayBuffer(strObj);\n\t      } catch (e) {\n\t        console.warn(e);\n\t      }\n\n\t      return buff;\n\t    }\n\n\t    /**\n\t    * Convert an ArrayBuffer into a JS Object. This uses an intermediate unicode JSON string.\n\t    * Of course, this buffer has to come from a serialized object.\n\t    * @param {ArrayBuffer} buff - the ArrayBuffer that hides some object\n\t    * @return {Object} the deserialized object\n\t    */\n\n\t  }, {\n\t    key: \"ArrayBufferToObject\",\n\t    value: function ArrayBufferToObject(buff) {\n\t      var obj = null;\n\n\t      try {\n\t        var strObj = CodecUtils.arrayBufferToUnicode(buff);\n\t        obj = JSON.parse(strObj);\n\t      } catch (e) {\n\t        console.warn(e);\n\t      }\n\n\t      return obj;\n\t    }\n\n\t    /**\n\t    * Get if wether of not the arg is a typed array\n\t    * @param {Object} obj - possibly a typed array, or maybe not\n\t    * @return {Boolean} true if obj is a typed array\n\t    */\n\n\t  }, {\n\t    key: \"isTypedArray\",\n\t    value: function isTypedArray(obj) {\n\t      return obj instanceof Int8Array || obj instanceof Uint8Array || obj instanceof Uint8ClampedArray || obj instanceof Int16Array || obj instanceof Uint16Array || obj instanceof Int32Array || obj instanceof Uint32Array || obj instanceof Float32Array || obj instanceof Float64Array;\n\t    }\n\n\t    /**\n\t    * Merge some ArrayBuffes in a single one\n\t    * @param {Array} arrayOfBuffers - some ArrayBuffers\n\t    * @return {ArrayBuffer} the larger merged buffer\n\t    */\n\n\t  }, {\n\t    key: \"mergeBuffers\",\n\t    value: function mergeBuffers(arrayOfBuffers) {\n\t      var totalByteSize = 0;\n\n\t      for (var i = 0; i < arrayOfBuffers.length; i++) {\n\t        totalByteSize += arrayOfBuffers[i].byteLength;\n\t      }\n\n\t      var concatArray = new Uint8Array(totalByteSize);\n\n\t      var offset = 0;\n\t      for (var i = 0; i < arrayOfBuffers.length; i++) {\n\t        concatArray.set(new Uint8Array(arrayOfBuffers[i]), offset);\n\t        offset += arrayOfBuffers[i].byteLength;\n\t      }\n\n\t      return concatArray.buffer;\n\t    }\n\n\t    /**\n\t    * In a browser, the global object is `window` while in Node, it's `GLOBAL`.\n\t    * This method return the one that is relevant to the execution context.\n\t    * @return {Object} the global object\n\t    */\n\n\t  }, {\n\t    key: \"getGlobalObject\",\n\t    value: function getGlobalObject() {\n\t      var constructorHost = null;\n\n\t      try {\n\t        constructorHost = window; // in a web browser\n\t      } catch (e) {\n\t        try {\n\t          constructorHost = GLOBAL; // in node\n\t        } catch (e) {\n\t          console.warn(\"You are not in a Javascript environment?? Weird.\");\n\t          return null;\n\t        }\n\t      }\n\t      return constructorHost;\n\t    }\n\n\t    /**\n\t    * Extract a typed array from an arbitrary buffer, with an arbitrary offset\n\t    * @param {ArrayBuffer} buffer - the buffer from which we extract data\n\t    * @param {Number} byteOffset - offset from the begining of buffer\n\t    * @param {Function} arrayType - function object, actually the constructor of the output array\n\t    * @param {Number} numberOfElements - nb of elem we want to fetch from the buffer\n\t    * @return {TypedArray} output of type given by arg arrayType - this is a copy, not a view\n\t    */\n\n\t  }, {\n\t    key: \"extractTypedArray\",\n\t    value: function extractTypedArray(buffer, byteOffset, arrayType, numberOfElements) {\n\t      if (!buffer) {\n\t        console.warn(\"Input Buffer is null.\");\n\t        return null;\n\t      }\n\n\t      if (!(buffer instanceof ArrayBuffer)) {\n\t        console.warn(\"Buffer must be of type ArrayBuffer\");\n\t        return null;\n\t      }\n\n\t      if (numberOfElements <= 0) {\n\t        console.warn(\"The number of elements to fetch must be greater than 0\");\n\t        return null;\n\t      }\n\n\t      if (byteOffset < 0) {\n\t        console.warn(\"The byte offset must be possitive or 0\");\n\t        return null;\n\t      }\n\n\t      if (byteOffset >= buffer.byteLength) {\n\t        console.warn(\"The offset cannot be larger than the size of the buffer.\");\n\t        return null;\n\t      }\n\n\t      if (arrayType instanceof Function && !(\"BYTES_PER_ELEMENT\" in arrayType)) {\n\t        console.warn(\"ArrayType must be a typed array constructor function.\");\n\t        return null;\n\t      }\n\n\t      if (arrayType.BYTES_PER_ELEMENT * numberOfElements + byteOffset > buffer.byteLength) {\n\t        console.warn(\"The requested number of elements is too large for this buffer\");\n\t        return;\n\t      }\n\n\t      var slicedBuff = buffer.slice(byteOffset, byteOffset + numberOfElements * arrayType.BYTES_PER_ELEMENT);\n\t      return new arrayType(slicedBuff);\n\t    }\n\n\t    /**\n\t    * Get some info about the given TypedArray\n\t    * @param {TypedArray} typedArray - one of the typed array\n\t    * @return {Object} in form of {type: String, signed: Boolean, bytesPerElements: Number, byteLength: Number, length: Number}\n\t    */\n\n\t  }, {\n\t    key: \"getTypedArrayInfo\",\n\t    value: function getTypedArrayInfo(typedArray) {\n\t      var type = null;\n\t      var signed = false;\n\n\t      if (typedArray instanceof Int8Array) {\n\t        type = \"int\";\n\t        signed = false;\n\t      } else if (typedArray instanceof Uint8Array) {\n\t        type = \"int\";\n\t        signed = true;\n\t      } else if (typedArray instanceof Uint8ClampedArray) {\n\t        type = \"int\";\n\t        signed = true;\n\t      } else if (typedArray instanceof Int16Array) {\n\t        type = \"int\";\n\t        signed = false;\n\t      } else if (typedArray instanceof Uint16Array) {\n\t        type = \"int\";\n\t        signed = true;\n\t      } else if (typedArray instanceof Int32Array) {\n\t        type = \"int\";\n\t        signed = false;\n\t      } else if (typedArray instanceof Uint32Array) {\n\t        type = \"int\";\n\t        signed = true;\n\t      } else if (typedArray instanceof Float32Array) {\n\t        type = \"float\";\n\t        signed = false;\n\t      } else if (typedArray instanceof Float64Array) {\n\t        type = \"float\";\n\t        signed = false;\n\t      }\n\n\t      return {\n\t        type: type,\n\t        signed: signed,\n\t        bytesPerElements: typedArray.BYTES_PER_ELEMENT,\n\t        byteLength: typedArray.byteLength,\n\t        length: typedArray.length\n\t      };\n\t    }\n\n\t    /**\n\t    * Counts the number of typed array obj has as attributes\n\t    * @param {Object} obj - an Object\n\t    * @return {Number} the number of typed array\n\t    */\n\n\t  }, {\n\t    key: \"howManyTypedArrayAttributes\",\n\t    value: function howManyTypedArrayAttributes(obj) {\n\t      var typArrCounter = 0;\n\t      traverse_1(obj).forEach(function (x) {\n\t        typArrCounter += CodecUtils.isTypedArray(x);\n\t      });\n\t      return typArrCounter;\n\t    }\n\n\t    /**\n\t    * Check if the given object contains any circular reference.\n\t    * (Circular ref are non serilizable easily, we want to spot them)\n\t    * @param {Object} obj - An object to check\n\t    * @return {Boolean} true if obj contains circular refm false if not\n\t    */\n\n\t  }, {\n\t    key: \"hasCircularReference\",\n\t    value: function hasCircularReference(obj) {\n\t      var hasCircular = false;\n\t      traverse_1(obj).forEach(function (x) {\n\t        if (this.circular) {\n\t          hasCircular = true;\n\t        }\n\t      });\n\t      return hasCircular;\n\t    }\n\n\t    /**\n\t    * Remove circular dependencies from an object and return a circularRef-free version\n\t    * of the object (does not change the original obj), of null if no circular ref was found\n\t    * @param {Object} obj - An object to check\n\t    * @return {Object} a circular-ref free object copy if any was found, or null if no circ was found\n\t    */\n\n\t  }, {\n\t    key: \"removeCircularReference\",\n\t    value: function removeCircularReference(obj) {\n\t      var hasCircular = false;\n\t      var noCircRefObj = traverse_1(obj).map(function (x) {\n\t        if (this.circular) {\n\t          this.remove();\n\t          hasCircular = true;\n\t        }\n\t      });\n\t      return hasCircular ? noCircRefObj : null;\n\t    }\n\n\t    /**\n\t    * Clone the object and replace the typed array attributes by regular Arrays.\n\t    * @param {Object} obj - an object to alter\n\t    * @return {Object} the clone if ant typed array were changed, or null if was obj didnt contain any typed array.\n\t    */\n\n\t  }, {\n\t    key: \"replaceTypedArrayAttributesByArrays\",\n\t    value: function replaceTypedArrayAttributesByArrays(obj) {\n\t      var hasTypedArray = false;\n\n\t      var noTypedArrClone = traverse_1(obj).map(function (x) {\n\t        if (CodecUtils.isTypedArray(x)) {\n\t          // here, we cannot call .length directly because traverse.map already serialized\n\t          // typed arrays into regular objects\n\t          var origSize = Object.keys(x).length;\n\t          var untypedArray = new Array(origSize);\n\n\t          for (var i = 0; i < origSize; i++) {\n\t            untypedArray[i] = x[i];\n\t          }\n\t          this.update(untypedArray);\n\t          hasTypedArray = true;\n\t        }\n\t      });\n\t      return hasTypedArray ? noTypedArrClone : null;\n\t    }\n\n\t    /**\n\t    * Creates a clone, does not alter the original object.\n\t    * Remove circular dependencies and replace typed arrays by regular arrays.\n\t    * Both will make the serialization possible and more reliable.\n\t    * @param {Object} obj - the object to make serialization friendly\n\t    * @return {Object} a clean clone, or null if nothing was done\n\t    */\n\n\t  }, {\n\t    key: \"makeSerializeFriendly\",\n\t    value: function makeSerializeFriendly(obj) {\n\t      var newObj = obj;\n\t      var noCircular = CodecUtils.removeCircularReference(newObj);\n\n\t      if (noCircular) newObj = noCircular;\n\n\t      var noTypedArr = CodecUtils.replaceTypedArrayAttributesByArrays(newObj);\n\n\t      if (noTypedArr) newObj = noTypedArr;\n\n\t      return newObj;\n\t    }\n\n\t    /**\n\t    * Check if a string is valid or not. A string is considered as invalid if it has\n\t    * unicode \"REPLACEMENT CHARACTER\" or non-printable ASCII characters.\n\t    * @param {String} str - string to test\n\t    * @param {Boolean} forceAll - test the whole string instead of a sample of 1000 charaters\n\t    * @return {Boolean} true is the string is valid, false if invalid.\n\t    */\n\n\t  }, {\n\t    key: \"isValidString\",\n\t    value: function isValidString(str) {\n\t      var forceAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t      var strLen = str.length;\n\t      var nbSamples = forceAll ? strLen : Math.min(1000, strLen); //  a sample of 1000 should be enough\n\t      var flagChar = 0xFFFD;\n\t      var redFlags = 0;\n\t      for (var i = 0; i < nbSamples; i++) {\n\t        var code = str.charCodeAt(Math.floor(Math.random() * nbSamples));\n\t        if (code === flagChar || code < 32 && code != 10 && code != 13 && code != 9 || code == 127) {\n\t          redFlags++;\n\t        }\n\t      }\n\t      return !(redFlags > 0);\n\t    }\n\t  }]);\n\t  return CodecUtils;\n\t}(); /* END of class CodecUtils */\n\n\texports.CodecUtils = CodecUtils;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=codecutils.umd.js.map\n"," /*\n* Author    Jonathan Lurie - http://me.jonahanlurie.fr\n* License   MIT\n* Link      https://github.com/jonathanlurie/edfdecoder\n* Lab       MCIN - http://mcin.ca/ - Montreal Neurological Institute\n*/\n\n\n/**\n* An instance of Edf is usually given as output of an EdfDecoder. It provides an\n* interface with a lot of helper function to query information that were extracted\n* from en *.edf* file, such as header information, getting a signal at a given record\n* or concatenating records of a given signal.\n*\n* Keep in mind that the number of records in an edf file can be decoded by arbitrary\n* measures, or it can be 1 second per records, etc.\n*\n*/\nclass Edf {\n  constructor( header, rawSignals, physicalSignals ){\n    this._header = header;\n    this._physicalSignals = physicalSignals;\n    this._rawSignals = rawSignals;\n  }\n\n  /**\n  * Get the duration in second of a single record\n  * @return {Number} duration\n  */\n  getRecordDuration(){\n    return this._header.durationDataRecordsSec;\n  }\n\n\n  /**\n  * Get the ID of the recording\n  * @return {String} the ID\n  */\n  getRecordingID(){\n    return this._header.localRecordingId;\n  }\n\n\n  /**\n  * get the number of records per signal.\n  * Note: most of the time, records from the same signal are contiguous in time.\n  * @return {Number} the number of records\n  */\n  getNumberOfRecords(){\n    return this._header.nbDataRecords;\n  }\n\n\n  /**\n  * get the number of signals.\n  * Note: a signal can have more than one record\n  * @return {Number} the number of signals\n  */\n  getNumberOfSignals(){\n    return this._header.nbSignals;\n  }\n\n\n  /**\n  * Get the patien ID\n  * @return {String} ID\n  */\n  getPatientID(){\n    return this._header.patientId;\n  }\n\n\n  /**\n  * Get the date and the time at which the recording has started\n  * @return {Date} the date\n  */\n  getRecordingStartDate(){\n    return this._header.recordingDate;\n  }\n\n\n  /**\n  * Get the value of the reserved field, global (from header) or specific to a signal.\n  * Notice: reserved are rarely used.\n  * @param {Number} index - if not specified, get the header's reserved field. If [0, nbSignals[ get the reserved field specific for the given signal\n  * @return {String} the data of the reserved field.\n  */\n  getReservedField( index=-1 ){\n    if( index === -1 ){\n      return this._header.reserved;\n    }else{\n      if( index >= 0 && index < this._header.signalInfo.length ){\n        return this._header.signalInfo[index].reserved;\n      }\n    }\n\n    return null;\n  }\n\n\n  /**\n  * Get the digital maximum for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalDigitalMax( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].digitalMaximum;\n  }\n\n\n  /**\n  * Get the digital minimum for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalDigitalMin( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].digitalMinimum;\n  }\n\n\n  /**\n  * Get the physical minimum for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalPhysicalMin( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].physicalMinimum;\n  }\n\n\n  /**\n  * Get the physical maximum for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalPhysicalMax( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].physicalMaximum;\n  }\n\n\n  /**\n  * Get the label for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {String}\n  */\n  getSignalLabel( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].label;\n  }\n\n\n  /**\n  * Get the number of samples per record for a given signal index\n  * @param {Number} index - index of the signal\n  * @return {Number}\n  */\n  getSignalNumberOfSamplesPerRecord( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].nbOfSamples;\n  }\n\n\n  /**\n  * Get the unit (dimension label) used for a given signal index.\n  * E.g. this can be 'uV' when the signal is an EEG\n  * @param {Number} index - index of the signal\n  * @return {String} the unit name\n  */\n  getSignalPhysicalUnit( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].physicalDimension;\n  }\n\n\n  /**\n  * Get the unit prefiltering info for a given signal index.\n  * @param {Number} index - index of the signal\n  * @return {String} the prefiltering info\n  */\n  getSignalPrefiltering( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].prefiltering;\n  }\n\n\n  /**\n  * Get the transducer type info for a given signal index.\n  * @param {Number} index - index of the signal\n  * @return {String} the transducer type info\n  */\n  getSignalTransducerType( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].transducerType;\n  }\n\n\n  /**\n  * Get the sampling frequency in Hz of a given signal\n  * @param {Number} index - index of the signal\n  * @return {Number} frequency in Hz\n  */\n  getSignalSamplingFrequency( index ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    return this._header.signalInfo[index].nbOfSamples / this._header.durationDataRecordsSec;\n  }\n\n  /**\n  * Get the physical (scaled) signal at a given index and record\n  * @param {Number} index - index of the signal\n  * @param {Number} record - index of the record\n  * @return {Float32Array} the physical signal in Float32\n  */\n  getPhysicalSignal( index, record ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    if( record<0 && record>=this._physicalSignals[index].length ){\n      console.warn(\"Record index is out of range\");\n      return null;\n    }\n\n    return this._physicalSignals[index][record];\n  }\n\n\n  /**\n  * Get the raw (digital) signal at a given index and record\n  * @param {Number} index - index of the signal\n  * @param {Number} record - index of the record\n  * @return {Int16Array} the physical signal in Int16\n  */\n  getRawSignal( index, record ){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    if( record<0 && record>=this._rawSignals[index].length ){\n      console.warn(\"Record index is out of range\");\n      return null;\n    }\n\n    return this._rawSignals[index][record];\n  }\n\n\n\n  /**\n  * Get concatenated contiguous records of a given signal, the index of the\n  * first record and the number of records to concat.\n  * Notice: this allocates a new buffer of an extented size.\n  * @param {Number} index - index of the signal\n  * @param {Number} recordStart - index of the record to start with\n  * @param {Number} howMany - Number of records to concatenate\n  * @return {Float32Array} the physical signal in Float32\n  */\n  getPhysicalSignalConcatRecords(index, recordStart=-1, howMany=-1){\n    if( index < 0 || index >= this._header.signalInfo.length ){\n      console.warn(\"Signal index is out of range\");\n      return null;\n    }\n\n    if( recordStart<0 && recordStart>=this._physicalSignals[index].length ){\n      console.warn(\"The index recordStart is out of range\");\n      return null;\n    }\n\n    if(recordStart === -1){\n      recordStart = 0;\n    }\n\n    if(howMany === -1){\n      howMany = this._physicalSignals[index].length - recordStart;\n    }else{\n      // we still want to check if what the user put is not out of bound\n      if( recordStart + howMany > this._physicalSignals[index].length ){\n        console.warn(\"The number of requested records is too large. Forcing only to available records.\");\n        howMany = this._physicalSignals[index].length - recordStart; \n      }\n\n    }\n\n    // index of the last one to consider\n    var recordEnd = recordStart + howMany - 1;\n\n    if( recordEnd<0 && recordEnd>=this._physicalSignals[index].length ){\n      console.warn(\"Too many records to concatenate, this goes out of range.\");\n      return null;\n    }\n\n    var totalSize = 0;\n    for(var i=recordStart; i<recordStart + howMany; i++){\n      totalSize += this._physicalSignals[index][i].length;\n    }\n\n    var concatSignal = new Float32Array( totalSize );\n    var offset = 0;\n\n    for(var i=recordStart; i<recordStart + howMany; i++){\n      concatSignal.set( this._physicalSignals[index][i], offset );\n      offset += this._physicalSignals[index][i].length;\n    }\n\n    return concatSignal;\n  }\n\n\n} /* END of class Edf */\n\nexport { Edf };\n","/*\n* Author    Jonathan Lurie - http://me.jonahanlurie.fr\n* License   MIT\n* Link      https://github.com/jonathanlurie/edfdecoder\n* Lab       MCIN - http://mcin.ca/ - Montreal Neurological Institute\n*/\n\n\nimport codecutils from 'codecutils';\nimport { Edf } from './Edf.js';\n\n\n/**\n* An instance of EdfDecoder is used to decode an EDF file, or rather a buffer extracted from a\n* EDF file. To specify the input, use the method `.setInput(buf)` , then launch the decoding\n* with the method `.decode()` and finally get the content as an object with `.getOutput()`.\n* If the output is `null`, then the parser was not able to decode the file.\n*/\nclass EdfDecoder {\n\n  /**\n   * Create a EdfDecoder.\n   */\n  constructor( ) {\n    this._inputBuffer = null;\n    this._output = null;\n  }\n\n\n  /**\n  * Set the buffer (most likey from a file) that contains some EDF data\n  * @param {ArrayBuffer} buff - buffer from a file\n  */\n  setInput( buff ){\n    this._output = null;\n    this._inputBuffer = buff;\n  }\n\n\n  /**\n  * Decode the EDF file buffer set as input. This is done in two steps, first the header and then the data.\n  */\n  decode(){\n    try{\n      var headerInfo = this._decodeHeader();\n      this._decodeData( headerInfo.offset, headerInfo.header );\n    }catch(e){\n      console.warn( e );\n    }\n\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Decodes the header or the file\n  */\n  _decodeHeader(){\n    if(! this._inputBuffer ){\n      console.warn(\"A input buffer must be specified.\");\n      return;\n    }\n\n    var header = {};\n    var offset = 0;\n\n    // 8 ascii : version of this data format (0)\n    header.dataFormat = codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim();\n    offset += 8;\n\n    // 80 ascii : local patient identification\n    header.patientId = codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 80, offset).trim();\n    offset += 80;\n\n    // 80 ascii : local recording identification\n    header.localRecordingId = codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 80, offset).trim();\n    offset += 80;\n\n    // 8 ascii : startdate of recording (dd.mm.yy)\n    var recordingStartDate = codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim();\n    offset += 8;\n\n    // 8 ascii : starttime of recording (hh.mm.ss)\n    var recordingStartTime = codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim();\n    offset += 8;\n\n    var date = recordingStartDate.split(\".\");\n    var time = recordingStartTime.split(\".\");\n    header.recordingDate = new Date( date[2], date[1], date[0], time[0], time[1], time[2], 0 );\n\n    // 8 ascii : number of bytes in header record\n    header.nbBytesHeaderRecord = parseInt( codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim() );\n    offset += 8;\n\n    // 44 ascii : reserved\n    header.reserved = codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 44, offset);\n    offset += 44;\n\n    // 8 ascii : number of data records (-1 if unknown)\n    header.nbDataRecords = parseInt( codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim() );\n    offset += 8;\n\n    // 8 ascii : duration of a data record, in seconds\n    header.durationDataRecordsSec = parseInt( codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 8, offset).trim() );\n    offset += 8;\n\n    // 4 ascii : number of signals (ns) in data record\n    header.nbSignals = parseInt( codecutils.CodecUtils.getString8FromBuffer( this._inputBuffer , 4, offset).trim() );\n    offset += 4;\n\n    // the following fields occurs ns time in a row each\n    var that = this;\n    function getAllSections( sizeOfEachThing ){\n      var allThings = [];\n      for(var i=0; i<header.nbSignals; i++){\n        allThings.push( codecutils.CodecUtils.getString8FromBuffer( that._inputBuffer , sizeOfEachThing, offset ).trim() );\n        offset += sizeOfEachThing;\n      }\n      return allThings;\n    }\n\n    var signalInfoArrays = {\n      // ns * 16 ascii : ns * label (e.g. EEG Fpz-Cz or Body temp)\n      label: getAllSections( 16 ),\n      // ns * 80 ascii : ns * transducer type (e.g. AgAgCl electrode)\n      transducerType: getAllSections( 80 ),\n      // ns * 8 ascii : ns * physical dimension (e.g. uV or degreeC)\n      physicalDimension: getAllSections( 8 ),\n      // ns * 8 ascii : ns * physical minimum (e.g. -500 or 34)\n      physicalMinimum: getAllSections( 8 ),\n      // ns * 8 ascii : ns * physical maximum (e.g. 500 or 40)\n      physicalMaximum: getAllSections( 8 ),\n      // ns * 8 ascii : ns * digital minimum (e.g. -2048)\n      digitalMinimum: getAllSections( 8 ),\n      // ns * 8 ascii : ns * digital maximum (e.g. 2047)\n      digitalMaximum: getAllSections( 8 ),\n      // ns * 80 ascii : ns * prefiltering (e.g. HP:0.1Hz LP:75Hz)\n      prefiltering: getAllSections( 80 ),\n      // ns * 8 ascii : ns * nr of samples in each data record\n      nbOfSamples: getAllSections( 8 ),\n      // ns * 32 ascii : ns * reserved\n      reserved: getAllSections( 32 )\n    }\n\n    var signalInfo = [];\n    header.signalInfo = signalInfo;\n    for(var i=0; i<header.nbSignals; i++){\n      signalInfo.push({\n        label: signalInfoArrays.label[i],\n        transducerType: signalInfoArrays.transducerType[i],\n        physicalDimension: signalInfoArrays.physicalDimension[i],\n        physicalMinimum: parseFloat( signalInfoArrays.physicalMinimum[i] ),\n        physicalMaximum: parseFloat( signalInfoArrays.physicalMaximum[i] ),\n        digitalMinimum: parseInt( signalInfoArrays.digitalMinimum[i] ),\n        digitalMaximum: parseInt( signalInfoArrays.digitalMaximum[i] ),\n        prefiltering: signalInfoArrays.prefiltering[i],\n        nbOfSamples: parseInt( signalInfoArrays.nbOfSamples[i] ),\n        reserved: signalInfoArrays.reserved[i],\n      })\n    }\n\n    return {\n      offset: offset,\n      header: header\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Decodes the data. Must be called after the header is decoded.\n  * @param {Number} byteOffset - byte size of the header\n  */\n  _decodeData( byteOffset, header ){\n    if(! this._inputBuffer ){\n      console.warn(\"A input buffer must be specified.\");\n      return;\n    }\n\n    if(! header ){\n      console.warn(\"Invalid header\");\n      return;\n    }\n\n    var sampleType = Int16Array;\n\n    // the raw signal is the digital signal\n    var rawSignals = new Array(header.nbSignals);\n    var physicalSignals = new Array(header.nbSignals);\n    // allocation some room for all the records\n    for(var ns=0; ns<header.nbSignals; ns++){\n      rawSignals[ns] = new Array(header.nbDataRecords);\n      physicalSignals[ns] = new Array(header.nbDataRecords);\n    }\n\n    // the signal are faster varying than the records\n    for(var r=0; r<header.nbDataRecords; r++){\n      for(var ns=0; ns<header.nbSignals; ns++){\n        var signalNbSamples = header.signalInfo[ns].nbOfSamples;\n        var rawSignal = codecutils.CodecUtils.extractTypedArray( this._inputBuffer, byteOffset, sampleType, signalNbSamples );\n        byteOffset += signalNbSamples * sampleType.BYTES_PER_ELEMENT;\n        rawSignals[ns][r] = rawSignal;\n\n\n        // compute the scaled signal\n        var physicalSignal = new Float32Array( rawSignal.length ).fill(0);\n        var digitalSignalRange = header.signalInfo[ns].digitalMaximum - header.signalInfo[ns].digitalMinimum;\n        var physicalSignalRange = header.signalInfo[ns].physicalMaximum - header.signalInfo[ns].physicalMinimum;\n\n\n        for(var index=0; index<signalNbSamples; index++){\n          physicalSignal[ index ] = (((rawSignal[index] - header.signalInfo[ns].digitalMinimum) / digitalSignalRange ) * physicalSignalRange) + header.signalInfo[ns].physicalMinimum;\n        }\n\n        //physicalSignals.push( physicalSignal );\n        physicalSignals[ns][r] = physicalSignal;\n\n      }\n    }\n\n    this._output = new Edf( header, rawSignals, physicalSignals );\n\n\n  } /* END method */\n\n\n\n  /**\n  * Get the output as an object. The output contains the the header (Object),\n  * the raw (digital) signal as a Int16Array and the physical (scaled) signal\n  * as a Float32Array.\n  * @return {Object} the output.\n  */\n  getOutput(){\n    return this._output;\n  }\n\n}\n\nexport { EdfDecoder };\n"],"names":["this","createCommonjsModule","Edf","header","rawSignals","physicalSignals","_header","_physicalSignals","_rawSignals","durationDataRecordsSec","localRecordingId","nbDataRecords","nbSignals","patientId","recordingDate","index","reserved","signalInfo","length","warn","digitalMaximum","digitalMinimum","physicalMinimum","physicalMaximum","label","nbOfSamples","physicalDimension","prefiltering","transducerType","record","recordStart","howMany","recordEnd","totalSize","i","concatSignal","Float32Array","offset","set","EdfDecoder","_inputBuffer","_output","buff","headerInfo","_decodeHeader","_decodeData","e","dataFormat","codecutils","CodecUtils","getString8FromBuffer","trim","recordingStartDate","recordingStartTime","date","split","time","Date","nbBytesHeaderRecord","parseInt","that","getAllSections","sizeOfEachThing","allThings","push","signalInfoArrays","parseFloat","byteOffset","sampleType","Int16Array","Array","ns","r","signalNbSamples","rawSignal","extractTypedArray","BYTES_PER_ELEMENT","physicalSignal","fill","digitalSignalRange","physicalSignalRange"],"mappings":"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"}